{"ast":null,"code":"var _jsxFileName = \"C:\\\\programowanko\\\\react\\\\schedule-formatter\\\\schedule-formatter\\\\frontend\\\\src\\\\components\\\\template\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./template.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Template = _ref => {\n  _s();\n  let {\n    rows,\n    columns,\n    daysOfWeek,\n    currentGroups\n  } = _ref;\n  const k1 = \"https://podzial.mech.pk.edu.pl/stacjonarne/html/plany/o29.html\";\n  const k2 = \"https://podzial.mech.pk.edu.pl/stacjonarne/html/plany/o30.html\";\n  const grid = rows * columns;\n  const [data, setData] = useState([]);\n  let dataToDisplay = [];\n  let incrementer = -1;\n  let breakTime = 1;\n  const date = new Date(\"December 14, 2026 06:45:00\");\n  const endDate = new Date(\"December 14, 2026 07:30:00\");\n  let hoursAndMinutes = date.getHours() + \":\" + date.getMinutes();\n  let endHoursAndMinutes = endDate.getHours() + \":\" + endDate.getMinutes();\n  useEffect(() => {\n    if (currentGroups.k === \"12K1\") {\n      axios.get(\"http://localhost:3001/api/get/12k1\").then(_ref2 => {\n        let {\n          data\n        } = _ref2;\n        console.log(data);\n        // setData(\n        //     result\n        //       .join()\n        //       .split(\",\")\n        //       .map((element) => element.trim())\n        //   );\n      });\n    } else {\n      axios.get(\"http://localhost:3001/api/get/12k2\").then(_ref3 => {\n        let {\n          data\n        } = _ref3;\n        console.log(data);\n        // setData(\n        //   result\n        //     .join()\n        //     .split(\",\")\n        //     .map((element) => element.trim())\n        // );\n      });\n    }\n  }, [currentGroups.k]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"xd\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n\n  // dataToDisplay = dataFormatter(data, dataToDisplay);\n\n  // return (\n  //   <div className=\"template\">\n  //     {[...Array(grid)].map((e, i) => {\n  //       if (i < columns) {\n  //         return (\n  //           <div key={i} className=\"cell\">\n  //             {daysOfWeek[i]}\n  //           </div>\n  //         );\n  //       }\n\n  //       if (i % columns === 0) {\n  //         hoursAndMinutes = addMinutes(date);\n  //         hoursAndMinutes = addRemaining(hoursAndMinutes);\n  //         endHoursAndMinutes = addMinutes(endDate);\n  //         endHoursAndMinutes = addRemaining(endHoursAndMinutes);\n  //         breakTime++;\n  //       }\n\n  //       if (\n  //         i % columns === 0 &&\n  //         breakTime % 2 === 0 &&\n  //         hoursAndMinutes !== \"07:30\"\n  //       ) {\n  //         hoursAndMinutes = addMinutes(date, 15);\n  //         hoursAndMinutes = addRemaining(hoursAndMinutes);\n  //         endHoursAndMinutes = addMinutes(endDate, 15);\n  //         endHoursAndMinutes = addRemaining(endHoursAndMinutes);\n  //       }\n\n  //       if (i % columns !== 0) incrementer++;\n\n  //       if (dataToDisplay[incrementer] !== \" zajecia dodatkowe \") {\n  //         if (dataToDisplay[incrementer]) {\n  //           dataToDisplay[incrementer] = dataToDisplay[incrementer]\n  //             .split(\"---\")\n  //             .filter((element) => {\n  //               return (\n  //                 element.includes(`(${currentGroups.week})`) ||\n  //                 element.includes(`-${currentGroups.week}1`) ||\n  //                 element.includes(`-${currentGroups.week.toLowerCase()}1`) ||\n  //                 element.includes(`-${currentGroups.week}2`) ||\n  //                 element.includes(`-${currentGroups.week.toLowerCase()}2`)\n  //               );\n  //             })\n  //             .toString();\n  //         }\n\n  //         if (dataToDisplay[incrementer]) {\n  //           dataToDisplay[incrementer] = dataToDisplay[incrementer]\n  //             .split(\",\")\n  //             .filter((element) => {\n  //               if (element.includes(currentGroups.gl)) {\n  //                 return true;\n  //               } else if (element.includes(\"L0\")) {\n  //                 return false;\n  //               } else {\n  //                 return true;\n  //               }\n  //             })\n  //             .toString();\n  //         }\n\n  //         if (dataToDisplay[incrementer]) {\n  //           dataToDisplay[incrementer] = dataToDisplay[incrementer]\n  //             .split(\",\")\n  //             .filter((element) => {\n  //               if (element.includes(currentGroups.gk)) {\n  //                 return true;\n  //               } else if (element.includes(\"K0\")) {\n  //                 return false;\n  //               } else {\n  //                 return true;\n  //               }\n  //             })\n  //             .toString();\n  //         }\n\n  //         if (dataToDisplay[incrementer]) {\n  //           dataToDisplay[incrementer] = dataToDisplay[incrementer]\n  //             .split(\",\")\n  //             .filter((element) => {\n  //               if (element.includes(currentGroups.gp)) {\n  //                 return true;\n  //               } else if (element.includes(\"P0\")) {\n  //                 return false;\n  //               } else {\n  //                 return true;\n  //               }\n  //             })\n  //             .toString();\n  //         }\n  //       }\n\n  //       return i % columns === 0 ? (\n  //         <div key={i} className=\"cell\">\n  //           {hoursAndMinutes} - {endHoursAndMinutes}\n  //         </div>\n  //       ) : (\n  //         <div key={i} className=\"cell\">\n  //           {dataToDisplay[incrementer] === \" okienko \"\n  //             ? \"\"\n  //             : dataToDisplay[incrementer]}\n  //         </div>\n  //       );\n  //     })}\n  //   </div>\n  // );\n};\n_s(Template, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Template;\nexport default Template;\nvar _c;\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"names":["useEffect","useState","axios","Template","rows","columns","daysOfWeek","currentGroups","k1","k2","grid","data","setData","dataToDisplay","incrementer","breakTime","date","Date","endDate","hoursAndMinutes","getHours","getMinutes","endHoursAndMinutes","k","get","then","console","log"],"sources":["C:/programowanko/react/schedule-formatter/schedule-formatter/frontend/src/components/template/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { addMinutes, addRemaining } from \"./createCells\";\r\nimport \"./template.css\";\r\nimport { getData } from \"../../data/Scrapper\";\r\nimport { dataFormatter } from \"./dataFormatter\";\r\nimport { Actions, CurrentGroups } from \"../nav/module\";\r\nimport axios from \"axios\";\r\n\r\ntype Props = {\r\n  rows: number;\r\n  columns: number;\r\n  daysOfWeek: string[];\r\n  currentGroups: CurrentGroups;\r\n  currentGroupsDispatch: React.Dispatch<Actions>;\r\n};\r\n\r\nconst Template: React.FC<Props> = ({\r\n  rows,\r\n  columns,\r\n  daysOfWeek,\r\n  currentGroups,\r\n}) => {\r\n  const k1 = \"https://podzial.mech.pk.edu.pl/stacjonarne/html/plany/o29.html\";\r\n  const k2 = \"https://podzial.mech.pk.edu.pl/stacjonarne/html/plany/o30.html\";\r\n  const grid = rows * columns;\r\n  const [data, setData] = useState<string[]>([]);\r\n  let dataToDisplay: string[] = [];\r\n  let incrementer = -1;\r\n  let breakTime = 1;\r\n\r\n  const date = new Date(\"December 14, 2026 06:45:00\");\r\n  const endDate = new Date(\"December 14, 2026 07:30:00\");\r\n  let hoursAndMinutes = date.getHours() + \":\" + date.getMinutes();\r\n  let endHoursAndMinutes = endDate.getHours() + \":\" + endDate.getMinutes();\r\n\r\n  useEffect(() => {\r\n    if (currentGroups.k === \"12K1\") {\r\n      axios.get(\"http://localhost:3001/api/get/12k1\").then(({ data }) => {\r\n      console.log(data);  \r\n      // setData(\r\n      //     result\r\n      //       .join()\r\n      //       .split(\",\")\r\n      //       .map((element) => element.trim())\r\n      //   );\r\n      });\r\n    } else {\r\n      axios.get(\"http://localhost:3001/api/get/12k2\").then(({ data }) => {\r\n        console.log(data)\r\n        // setData(\r\n        //   result\r\n        //     .join()\r\n        //     .split(\",\")\r\n        //     .map((element) => element.trim())\r\n        // );\r\n      });\r\n    }\r\n  }, [currentGroups.k]);\r\n\r\n  return <div>xd</div>\r\n\r\n  // dataToDisplay = dataFormatter(data, dataToDisplay);\r\n\r\n  // return (\r\n  //   <div className=\"template\">\r\n  //     {[...Array(grid)].map((e, i) => {\r\n  //       if (i < columns) {\r\n  //         return (\r\n  //           <div key={i} className=\"cell\">\r\n  //             {daysOfWeek[i]}\r\n  //           </div>\r\n  //         );\r\n  //       }\r\n\r\n  //       if (i % columns === 0) {\r\n  //         hoursAndMinutes = addMinutes(date);\r\n  //         hoursAndMinutes = addRemaining(hoursAndMinutes);\r\n  //         endHoursAndMinutes = addMinutes(endDate);\r\n  //         endHoursAndMinutes = addRemaining(endHoursAndMinutes);\r\n  //         breakTime++;\r\n  //       }\r\n\r\n  //       if (\r\n  //         i % columns === 0 &&\r\n  //         breakTime % 2 === 0 &&\r\n  //         hoursAndMinutes !== \"07:30\"\r\n  //       ) {\r\n  //         hoursAndMinutes = addMinutes(date, 15);\r\n  //         hoursAndMinutes = addRemaining(hoursAndMinutes);\r\n  //         endHoursAndMinutes = addMinutes(endDate, 15);\r\n  //         endHoursAndMinutes = addRemaining(endHoursAndMinutes);\r\n  //       }\r\n\r\n  //       if (i % columns !== 0) incrementer++;\r\n\r\n  //       if (dataToDisplay[incrementer] !== \" zajecia dodatkowe \") {\r\n  //         if (dataToDisplay[incrementer]) {\r\n  //           dataToDisplay[incrementer] = dataToDisplay[incrementer]\r\n  //             .split(\"---\")\r\n  //             .filter((element) => {\r\n  //               return (\r\n  //                 element.includes(`(${currentGroups.week})`) ||\r\n  //                 element.includes(`-${currentGroups.week}1`) ||\r\n  //                 element.includes(`-${currentGroups.week.toLowerCase()}1`) ||\r\n  //                 element.includes(`-${currentGroups.week}2`) ||\r\n  //                 element.includes(`-${currentGroups.week.toLowerCase()}2`)\r\n  //               );\r\n  //             })\r\n  //             .toString();\r\n  //         }\r\n\r\n  //         if (dataToDisplay[incrementer]) {\r\n  //           dataToDisplay[incrementer] = dataToDisplay[incrementer]\r\n  //             .split(\",\")\r\n  //             .filter((element) => {\r\n  //               if (element.includes(currentGroups.gl)) {\r\n  //                 return true;\r\n  //               } else if (element.includes(\"L0\")) {\r\n  //                 return false;\r\n  //               } else {\r\n  //                 return true;\r\n  //               }\r\n  //             })\r\n  //             .toString();\r\n  //         }\r\n\r\n  //         if (dataToDisplay[incrementer]) {\r\n  //           dataToDisplay[incrementer] = dataToDisplay[incrementer]\r\n  //             .split(\",\")\r\n  //             .filter((element) => {\r\n  //               if (element.includes(currentGroups.gk)) {\r\n  //                 return true;\r\n  //               } else if (element.includes(\"K0\")) {\r\n  //                 return false;\r\n  //               } else {\r\n  //                 return true;\r\n  //               }\r\n  //             })\r\n  //             .toString();\r\n  //         }\r\n\r\n  //         if (dataToDisplay[incrementer]) {\r\n  //           dataToDisplay[incrementer] = dataToDisplay[incrementer]\r\n  //             .split(\",\")\r\n  //             .filter((element) => {\r\n  //               if (element.includes(currentGroups.gp)) {\r\n  //                 return true;\r\n  //               } else if (element.includes(\"P0\")) {\r\n  //                 return false;\r\n  //               } else {\r\n  //                 return true;\r\n  //               }\r\n  //             })\r\n  //             .toString();\r\n  //         }\r\n  //       }\r\n\r\n  //       return i % columns === 0 ? (\r\n  //         <div key={i} className=\"cell\">\r\n  //           {hoursAndMinutes} - {endHoursAndMinutes}\r\n  //         </div>\r\n  //       ) : (\r\n  //         <div key={i} className=\"cell\">\r\n  //           {dataToDisplay[incrementer] === \" okienko \"\r\n  //             ? \"\"\r\n  //             : dataToDisplay[incrementer]}\r\n  //         </div>\r\n  //       );\r\n  //     })}\r\n  //   </div>\r\n  // );\r\n};\r\n\r\nexport default Template;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,gBAAgB;AAIvB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAU1B,MAAMC,QAAyB,GAAG,QAK5B;EAAA;EAAA,IAL6B;IACjCC,IAAI;IACJC,OAAO;IACPC,UAAU;IACVC;EACF,CAAC;EACC,MAAMC,EAAE,GAAG,gEAAgE;EAC3E,MAAMC,EAAE,GAAG,gEAAgE;EAC3E,MAAMC,IAAI,GAAGN,IAAI,GAAGC,OAAO;EAC3B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EAC9C,IAAIY,aAAuB,GAAG,EAAE;EAChC,IAAIC,WAAW,GAAG,CAAC,CAAC;EACpB,IAAIC,SAAS,GAAG,CAAC;EAEjB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,4BAA4B,CAAC;EACnD,MAAMC,OAAO,GAAG,IAAID,IAAI,CAAC,4BAA4B,CAAC;EACtD,IAAIE,eAAe,GAAGH,IAAI,CAACI,QAAQ,EAAE,GAAG,GAAG,GAAGJ,IAAI,CAACK,UAAU,EAAE;EAC/D,IAAIC,kBAAkB,GAAGJ,OAAO,CAACE,QAAQ,EAAE,GAAG,GAAG,GAAGF,OAAO,CAACG,UAAU,EAAE;EAExErB,SAAS,CAAC,MAAM;IACd,IAAIO,aAAa,CAACgB,CAAC,KAAK,MAAM,EAAE;MAC9BrB,KAAK,CAACsB,GAAG,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAAC,SAAc;QAAA,IAAb;UAAEd;QAAK,CAAC;QAC9De,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;QACjB;QACA;QACA;QACA;QACA;QACA;MACA,CAAC,CAAC;IACJ,CAAC,MAAM;MACLT,KAAK,CAACsB,GAAG,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAAC,SAAc;QAAA,IAAb;UAAEd;QAAK,CAAC;QAC5De,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;QACjB;QACA;QACA;QACA;QACA;QACA;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACJ,aAAa,CAACgB,CAAC,CAAC,CAAC;EAErB,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAa;;EAEppB,QAAyB;AAAA,KAAzBA,QAAyB;AA6J/B,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}