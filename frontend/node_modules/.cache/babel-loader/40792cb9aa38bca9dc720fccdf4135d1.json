{"ast":null,"code":"import { textContent } from \"./stringify.js\";\nimport { getElementsByTagName } from \"./legacy.js\";\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nexport function getFeed(doc) {\n  const feedRoot = getOneElement(isValidFeed, doc);\n  return !feedRoot ? null : feedRoot.name === \"feed\" ? getAtomFeed(feedRoot) : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n  var _a;\n  const childs = feedRoot.children;\n  const feed = {\n    type: \"atom\",\n    items: getElementsByTagName(\"entry\", childs).map(item => {\n      var _a;\n      const {\n        children\n      } = item;\n      const entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"id\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n      if (href) {\n        entry.link = href;\n      }\n      const description = fetch(\"summary\", children) || fetch(\"content\", children);\n      if (description) {\n        entry.description = description;\n      }\n      const pubDate = fetch(\"updated\", children);\n      if (pubDate) {\n        entry.pubDate = new Date(pubDate);\n      }\n      return entry;\n    })\n  };\n  addConditionally(feed, \"id\", \"id\", childs);\n  addConditionally(feed, \"title\", \"title\", childs);\n  const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n  if (href) {\n    feed.link = href;\n  }\n  addConditionally(feed, \"description\", \"subtitle\", childs);\n  const updated = fetch(\"updated\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"email\", childs, true);\n  return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n  var _a, _b;\n  const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n  const feed = {\n    type: feedRoot.name.substr(0, 3),\n    id: \"\",\n    items: getElementsByTagName(\"item\", feedRoot.children).map(item => {\n      const {\n        children\n      } = item;\n      const entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"guid\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      addConditionally(entry, \"link\", \"link\", children);\n      addConditionally(entry, \"description\", \"description\", children);\n      const pubDate = fetch(\"pubDate\", children);\n      if (pubDate) entry.pubDate = new Date(pubDate);\n      return entry;\n    })\n  };\n  addConditionally(feed, \"title\", \"title\", childs);\n  addConditionally(feed, \"link\", \"link\", childs);\n  addConditionally(feed, \"description\", \"description\", childs);\n  const updated = fetch(\"lastBuildDate\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n  return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\"fileSize\", \"bitrate\", \"framerate\", \"samplingrate\", \"channels\", \"duration\", \"height\", \"width\"];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n  return getElementsByTagName(\"media:content\", where).map(elem => {\n    const {\n      attribs\n    } = elem;\n    const media = {\n      medium: attribs[\"medium\"],\n      isDefault: !!attribs[\"isDefault\"]\n    };\n    for (const attrib of MEDIA_KEYS_STRING) {\n      if (attribs[attrib]) {\n        media[attrib] = attribs[attrib];\n      }\n    }\n    for (const attrib of MEDIA_KEYS_INT) {\n      if (attribs[attrib]) {\n        media[attrib] = parseInt(attribs[attrib], 10);\n      }\n    }\n    if (attribs[\"expression\"]) {\n      media.expression = attribs[\"expression\"];\n    }\n    return media;\n  });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n  return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where) {\n  let recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where) {\n  let recurse = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  const val = fetch(tagName, where, recurse);\n  if (val) obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n  return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}","map":{"version":3,"mappings":"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","names":["textContent","getElementsByTagName","getFeed","doc","feedRoot","getOneElement","isValidFeed","name","getAtomFeed","getRssFeed","childs","children","feed","type","items","map","item","entry","media","getMediaElements","addConditionally","href","attribs","link","description","fetch","pubDate","Date","updated","substr","id","MEDIA_KEYS_STRING","MEDIA_KEYS_INT","where","elem","medium","isDefault","attrib","parseInt","expression","tagName","node","recurse","trim","obj","prop","val","value"],"sources":["feeds.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}