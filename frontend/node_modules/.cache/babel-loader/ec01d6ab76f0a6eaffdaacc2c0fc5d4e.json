{"ast":null,"code":"import { domEach, isTag } from '../utils.js';\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css(prop, val) {\n  if (prop != null && val != null ||\n  // When `prop` is a \"plain\" object\n  typeof prop === 'object' && !Array.isArray(prop)) {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        // `prop` can't be an array here anymore.\n        setCss(el, prop, val, i);\n      }\n    });\n  }\n  if (this.length === 0) {\n    return undefined;\n  }\n  return getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(el, prop, value, idx) {\n  if (typeof prop === 'string') {\n    const styles = getCss(el);\n    const val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n    if (val === '') {\n      delete styles[prop];\n    } else if (val != null) {\n      styles[prop] = val;\n    }\n    el.attribs['style'] = stringify(styles);\n  } else if (typeof prop === 'object') {\n    Object.keys(prop).forEach((k, i) => {\n      setCss(el, k, prop[k], i);\n    });\n  }\n}\nfunction getCss(el, prop) {\n  if (!el || !isTag(el)) return;\n  const styles = parse(el.attribs['style']);\n  if (typeof prop === 'string') {\n    return styles[prop];\n  }\n  if (Array.isArray(prop)) {\n    const newStyles = {};\n    prop.forEach(item => {\n      if (styles[item] != null) {\n        newStyles[item] = styles[item];\n      }\n    });\n    return newStyles;\n  }\n  return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj) {\n  return Object.keys(obj).reduce((str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles) {\n  styles = (styles || '').trim();\n  if (!styles) return {};\n  const obj = {};\n  let key;\n  for (const str of styles.split(';')) {\n    const n = str.indexOf(':');\n    // If there is no :, or if it is the first/last character, add to the previous item's value\n    if (n < 1 || n === str.length - 1) {\n      const trimmed = str.trimEnd();\n      if (trimmed.length > 0 && key !== undefined) {\n        obj[key] += `;${trimmed}`;\n      }\n    } else {\n      key = str.slice(0, n).trim();\n      obj[key] = str.slice(n + 1).trim();\n    }\n  }\n  return obj;\n}","map":{"version":3,"mappings":"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","names":["domEach","isTag","css","prop","val","Array","isArray","el","i","setCss","length","undefined","getCss","value","idx","styles","call","attribs","stringify","Object","keys","forEach","k","parse","newStyles","item","obj","reduce","str","trim","key","split","n","indexOf","trimmed","trimEnd","slice"],"sources":["api/css.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}