{"ast":null,"code":"var _jsxFileName = \"C:\\\\programowanko\\\\react\\\\schedule-formatter\\\\schedule-formatter\\\\src\\\\components\\\\template\\\\index.tsx\";\nimport \"./template.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Template = _ref => {\n  let {\n    rows,\n    columns\n  } = _ref;\n  const grid = rows * columns;\n  const date = new Date(\"December 14, 2026 07:30:00\");\n  let hoursAndMinutes = date.getHours() + \":\" + date.getMinutes();\n  function addHours() {\n    let hours = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n    return date.getHours() + \":\" + date.getMinutes();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"template\",\n    children: [...Array(grid)].map((e, i) => {\n      if (i % 18 === 0) {\n        hoursAndMinutes = addHours();\n      }\n      return i % columns === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: hoursAndMinutes\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 92\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Template;\nexport default Template;\nvar _c;\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"names":["Template","rows","columns","grid","date","Date","hoursAndMinutes","getHours","getMinutes","addHours","hours","setTime","getTime","Array","map","e","i"],"sources":["C:/programowanko/react/schedule-formatter/schedule-formatter/src/components/template/index.tsx"],"sourcesContent":["import \"./template.css\";\r\n\r\ntype Props = {\r\n  rows: number;\r\n  columns: number;\r\n};\r\n\r\nconst Template: React.FC<Props> = ({ rows, columns }) => {\r\n  const grid = rows * columns;\r\n\r\n  const date = new Date(\"December 14, 2026 07:30:00\");\r\n  let hoursAndMinutes = date.getHours() + \":\" + date.getMinutes();\r\n\r\n  function addHours(hours = 1) {  \r\n    date.setTime(date.getTime() + (hours*60*60*1000));\r\n    return date.getHours() + \":\" + date.getMinutes();\r\n  }\r\n\r\n  return (\r\n    <div className=\"template\">\r\n      {[...Array(grid)].map((e, i) => {\r\n        if (i % 18 === 0) {\r\n          hoursAndMinutes = addHours();\r\n        }\r\n        return i % columns === 0 ? <div key={i} className=\"cell\">{hoursAndMinutes}</div> : <div key={i} className=\"cell\"></div>\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Template;\r\n"],"mappings":";AAAA,OAAO,gBAAgB;AAAC;AAOxB,MAAMA,QAAyB,GAAG,QAAuB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC;EAClD,MAAMC,IAAI,GAAGF,IAAI,GAAGC,OAAO;EAE3B,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,4BAA4B,CAAC;EACnD,IAAIC,eAAe,GAAGF,IAAI,CAACG,QAAQ,EAAE,GAAG,GAAG,GAAGH,IAAI,CAACI,UAAU,EAAE;EAE/D,SAASC,QAAQ,GAAY;IAAA,IAAXC,KAAK,uEAAG,CAAC;IACzBN,IAAI,CAACO,OAAO,CAACP,IAAI,CAACQ,OAAO,EAAE,GAAIF,KAAK,GAAC,EAAE,GAAC,EAAE,GAAC,IAAK,CAAC;IACjD,OAAON,IAAI,CAACG,QAAQ,EAAE,GAAG,GAAG,GAAGH,IAAI,CAACI,UAAU,EAAE;EAClD;EAEA,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,UACtB,CAAC,GAAGK,KAAK,CAACV,IAAI,CAAC,CAAC,CAACW,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC9B,IAAIA,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;QAChBV,eAAe,GAAGG,QAAQ,EAAE;MAC9B;MACA,OAAOO,CAAC,GAAGd,OAAO,KAAK,CAAC,gBAAG;QAAa,SAAS,EAAC,MAAM;QAAA,UAAEI;MAAe,GAApCU,CAAC;QAAA;QAAA;QAAA;MAAA,QAA0C,gBAAG;QAAa,SAAS,EAAC;MAAM,GAAnBA,CAAC;QAAA;QAAA;QAAA;MAAA,QAAyB;IACzH,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KArBIhB,QAAyB;AAuB/B,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}