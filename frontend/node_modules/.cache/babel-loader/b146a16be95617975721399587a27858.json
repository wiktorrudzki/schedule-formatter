{"ast":null,"code":"import _toConsumableArray from\"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{addMinutes,addRemaining}from\"./createCells\";import\"./template.css\";import{getData}from\"../../data/Scrapper\";import{dataFormatter}from\"./dataFormatter\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Template=function Template(_ref){var rows=_ref.rows,columns=_ref.columns,daysOfWeek=_ref.daysOfWeek,currentGroups=_ref.currentGroups;var k1=\"https://podzial.mech.pk.edu.pl/stacjonarne/html/plany/o29.html\";var k2=\"https://podzial.mech.pk.edu.pl/stacjonarne/html/plany/o30.html\";var grid=rows*columns;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var dataToDisplay=[];var incrementer=-1;var breakTime=1;var date=new Date(\"December 14, 2026 06:45:00\");var endDate=new Date(\"December 14, 2026 07:30:00\");var hoursAndMinutes=date.getHours()+\":\"+date.getMinutes();var endHoursAndMinutes=endDate.getHours()+\":\"+endDate.getMinutes();useEffect(function(){if(currentGroups.k===\"12K1\"){getData(k1).then(function(result){setData(result.join().split(\",\").map(function(element){return element.trim();}));});}else{getData(k2).then(function(result){setData(result.join().split(\",\").map(function(element){return element.trim();}));});}},[currentGroups.k]);dataToDisplay=dataFormatter(data,dataToDisplay);return/*#__PURE__*/_jsx(\"div\",{className:\"template\",children:_toConsumableArray(Array(grid)).map(function(e,i){if(i<columns){return/*#__PURE__*/_jsx(\"div\",{className:\"cell\",children:daysOfWeek[i]},i);}if(i%columns===0){hoursAndMinutes=addMinutes(date);hoursAndMinutes=addRemaining(hoursAndMinutes);endHoursAndMinutes=addMinutes(endDate);endHoursAndMinutes=addRemaining(endHoursAndMinutes);breakTime++;}if(i%columns===0&&breakTime%2===0&&hoursAndMinutes!==\"07:30\"){hoursAndMinutes=addMinutes(date,15);hoursAndMinutes=addRemaining(hoursAndMinutes);endHoursAndMinutes=addMinutes(endDate,15);endHoursAndMinutes=addRemaining(endHoursAndMinutes);}if(i%columns!==0)incrementer++;if(dataToDisplay[incrementer]!==\" zajecia dodatkowe \"){if(dataToDisplay[incrementer]){dataToDisplay[incrementer]=dataToDisplay[incrementer].split(\"---\").filter(function(element){return element.includes(\"(\".concat(currentGroups.week,\")\"))||element.includes(\"-\".concat(currentGroups.week,\"1\"))||element.includes(\"-\".concat(currentGroups.week.toLowerCase(),\"1\"))||element.includes(\"-\".concat(currentGroups.week,\"2\"))||element.includes(\"-\".concat(currentGroups.week.toLowerCase(),\"2\"));}).toString();}if(dataToDisplay[incrementer]){dataToDisplay[incrementer]=dataToDisplay[incrementer].split(\",\").filter(function(element){if(element.includes(currentGroups.gl)){return true;}else if(element.includes(\"L0\")){return false;}else{return true;}}).toString();}if(dataToDisplay[incrementer]){dataToDisplay[incrementer]=dataToDisplay[incrementer].split(\",\").filter(function(element){if(element.includes(currentGroups.gk)){return true;}else if(element.includes(\"K0\")){return false;}else{return true;}}).toString();}if(dataToDisplay[incrementer]){dataToDisplay[incrementer]=dataToDisplay[incrementer].split(\",\").filter(function(element){if(element.includes(currentGroups.gp)){return true;}else if(element.includes(\"P0\")){return false;}else{return true;}}).toString();}}return i%columns===0?/*#__PURE__*/_jsxs(\"div\",{className:\"cell\",children:[hoursAndMinutes,\" - \",endHoursAndMinutes]},i):/*#__PURE__*/_jsx(\"div\",{className:\"cell\",children:dataToDisplay[incrementer]===\" okienko \"?\"\":dataToDisplay[incrementer]},i);})});};export default Template;","map":{"version":3,"names":["useEffect","useState","addMinutes","addRemaining","getData","dataFormatter","Template","rows","columns","daysOfWeek","currentGroups","k1","k2","grid","data","setData","dataToDisplay","incrementer","breakTime","date","Date","endDate","hoursAndMinutes","getHours","getMinutes","endHoursAndMinutes","k","then","result","join","split","map","element","trim","Array","e","i","filter","includes","week","toLowerCase","toString","gl","gk","gp"],"sources":["C:/programowanko/react/schedule-formatter/schedule-formatter/src/components/template/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { addMinutes, addRemaining } from \"./createCells\";\r\nimport \"./template.css\";\r\nimport { getData } from \"../../data/Scrapper\";\r\nimport { dataFormatter } from \"./dataFormatter\";\r\nimport { Actions, CurrentGroups } from \"../nav/module\";\r\n\r\ntype Props = {\r\n  rows: number;\r\n  columns: number;\r\n  daysOfWeek: string[];\r\n  currentGroups: CurrentGroups;\r\n  currentGroupsDispatch: React.Dispatch<Actions>;\r\n};\r\n\r\nconst Template: React.FC<Props> = ({\r\n  rows,\r\n  columns,\r\n  daysOfWeek,\r\n  currentGroups,\r\n}) => {\r\n  const k1 = \"https://podzial.mech.pk.edu.pl/stacjonarne/html/plany/o29.html\";\r\n  const k2 = \"https://podzial.mech.pk.edu.pl/stacjonarne/html/plany/o30.html\";\r\n  const grid = rows * columns;\r\n  const [data, setData] = useState<string[]>([]);\r\n  let dataToDisplay: string[] = [];\r\n  let incrementer = -1;\r\n  let breakTime = 1;\r\n\r\n  const date = new Date(\"December 14, 2026 06:45:00\");\r\n  const endDate = new Date(\"December 14, 2026 07:30:00\");\r\n  let hoursAndMinutes = date.getHours() + \":\" + date.getMinutes();\r\n  let endHoursAndMinutes = endDate.getHours() + \":\" + endDate.getMinutes();\r\n\r\n  useEffect(() => {\r\n    if (currentGroups.k === \"12K1\") {\r\n      getData(k1).then((result) => {\r\n        setData(\r\n          result\r\n            .join()\r\n            .split(\",\")\r\n            .map((element) => element.trim())\r\n        );\r\n      });\r\n    } else {\r\n      getData(k2).then((result) => {\r\n        setData(\r\n          result\r\n            .join()\r\n            .split(\",\")\r\n            .map((element) => element.trim())\r\n        );\r\n      });\r\n    }\r\n  }, [currentGroups.k]);\r\n\r\n  dataToDisplay = dataFormatter(data, dataToDisplay);\r\n\r\n  return (\r\n    <div className=\"template\">\r\n      {[...Array(grid)].map((e, i) => {\r\n        if (i < columns) {\r\n          return (\r\n            <div key={i} className=\"cell\">\r\n              {daysOfWeek[i]}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (i % columns === 0) {\r\n          hoursAndMinutes = addMinutes(date);\r\n          hoursAndMinutes = addRemaining(hoursAndMinutes);\r\n          endHoursAndMinutes = addMinutes(endDate);\r\n          endHoursAndMinutes = addRemaining(endHoursAndMinutes);\r\n          breakTime++;\r\n        }\r\n\r\n        if (\r\n          i % columns === 0 &&\r\n          breakTime % 2 === 0 &&\r\n          hoursAndMinutes !== \"07:30\"\r\n        ) {\r\n          hoursAndMinutes = addMinutes(date, 15);\r\n          hoursAndMinutes = addRemaining(hoursAndMinutes);\r\n          endHoursAndMinutes = addMinutes(endDate, 15);\r\n          endHoursAndMinutes = addRemaining(endHoursAndMinutes);\r\n        }\r\n\r\n        if (i % columns !== 0) incrementer++;\r\n\r\n        if (dataToDisplay[incrementer] !== \" zajecia dodatkowe \") {\r\n          if (dataToDisplay[incrementer]) {\r\n            dataToDisplay[incrementer] = dataToDisplay[incrementer]\r\n              .split(\"---\")\r\n              .filter((element) => {\r\n                return (\r\n                  element.includes(`(${currentGroups.week})`) ||\r\n                  element.includes(`-${currentGroups.week}1`) ||\r\n                  element.includes(`-${currentGroups.week.toLowerCase()}1`) ||\r\n                  element.includes(`-${currentGroups.week}2`) ||\r\n                  element.includes(`-${currentGroups.week.toLowerCase()}2`)\r\n                );\r\n              })\r\n              .toString();\r\n          }\r\n\r\n          if (dataToDisplay[incrementer]) {\r\n            dataToDisplay[incrementer] = dataToDisplay[incrementer]\r\n              .split(\",\")\r\n              .filter((element) => {\r\n                if (element.includes(currentGroups.gl)) {\r\n                  return true;\r\n                } else if (element.includes(\"L0\")) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              })\r\n              .toString();\r\n          }\r\n\r\n          if (dataToDisplay[incrementer]) {\r\n            dataToDisplay[incrementer] = dataToDisplay[incrementer]\r\n              .split(\",\")\r\n              .filter((element) => {\r\n                if (element.includes(currentGroups.gk)) {\r\n                  return true;\r\n                } else if (element.includes(\"K0\")) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              })\r\n              .toString();\r\n          }\r\n\r\n          if (dataToDisplay[incrementer]) {\r\n            dataToDisplay[incrementer] = dataToDisplay[incrementer]\r\n              .split(\",\")\r\n              .filter((element) => {\r\n                if (element.includes(currentGroups.gp)) {\r\n                  return true;\r\n                } else if (element.includes(\"P0\")) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              })\r\n              .toString();\r\n          }\r\n        }\r\n\r\n        return i % columns === 0 ? (\r\n          <div key={i} className=\"cell\">\r\n            {hoursAndMinutes} - {endHoursAndMinutes}\r\n          </div>\r\n        ) : (\r\n          <div key={i} className=\"cell\">\r\n            {dataToDisplay[incrementer] === \" okienko \"\r\n              ? \"\"\r\n              : dataToDisplay[incrementer]}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Template;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}