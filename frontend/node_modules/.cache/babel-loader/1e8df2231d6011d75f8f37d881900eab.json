{"ast":null,"code":"import { isTag, isCDATA, isText, hasChildren, isComment } from \"domhandler\";\nimport renderHTML from \"dom-serializer\";\nimport { ElementType } from \"domelementtype\";\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nexport function getOuterHTML(node, options) {\n  return renderHTML(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nexport function getInnerHTML(node, options) {\n  return hasChildren(node) ? node.children.map(node => getOuterHTML(node, options)).join(\"\") : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nexport function getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join(\"\");\n  if (isTag(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if (isCDATA(node)) return getText(node.children);\n  if (isText(node)) return node.data;\n  return \"\";\n}\n/**\n * Get a node's text content.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nexport function textContent(node) {\n  if (Array.isArray(node)) return node.map(textContent).join(\"\");\n  if (hasChildren(node) && !isComment(node)) {\n    return textContent(node.children);\n  }\n  if (isText(node)) return node.data;\n  return \"\";\n}\n/**\n * Get a node's inner text.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nexport function innerText(node) {\n  if (Array.isArray(node)) return node.map(innerText).join(\"\");\n  if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n    return innerText(node.children);\n  }\n  if (isText(node)) return node.data;\n  return \"\";\n}","map":{"version":3,"mappings":"AAAA,SACIA,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,WAAW,EAEXC,SAAS,QACN,YAAY;AACnB,OAAOC,UAAoC,MAAM,gBAAgB;AACjE,SAASC,WAAW,QAAQ,gBAAgB;AAE5C;;;;;;;AAOA,OAAM,SAAUC,YAAY,CACxBC,IAAkC,EAClCC,OAA8B;EAE9B,OAAOJ,UAAU,CAACG,IAAI,EAAEC,OAAO,CAAC;AACpC;AAEA;;;;;;;AAOA,OAAM,SAAUC,YAAY,CACxBF,IAAa,EACbC,OAA8B;EAE9B,OAAON,WAAW,CAACK,IAAI,CAAC,GAClBA,IAAI,CAACG,QAAQ,CAACC,GAAG,CAAEJ,IAAI,IAAKD,YAAY,CAACC,IAAI,EAAEC,OAAO,CAAC,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,GACjE,EAAE;AACZ;AAEA;;;;;;;;AAQA,OAAM,SAAUC,OAAO,CAACN,IAAyB;EAC7C,IAAIO,KAAK,CAACC,OAAO,CAACR,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACI,GAAG,CAACE,OAAO,CAAC,CAACD,IAAI,CAAC,EAAE,CAAC;EAC1D,IAAIb,KAAK,CAACQ,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACS,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGH,OAAO,CAACN,IAAI,CAACG,QAAQ,CAAC;EAC1E,IAAIV,OAAO,CAACO,IAAI,CAAC,EAAE,OAAOM,OAAO,CAACN,IAAI,CAACG,QAAQ,CAAC;EAChD,IAAIT,MAAM,CAACM,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACU,IAAI;EAClC,OAAO,EAAE;AACb;AAEA;;;;;;;;AAQA,OAAM,SAAUC,WAAW,CAACX,IAAyB;EACjD,IAAIO,KAAK,CAACC,OAAO,CAACR,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACI,GAAG,CAACO,WAAW,CAAC,CAACN,IAAI,CAAC,EAAE,CAAC;EAC9D,IAAIV,WAAW,CAACK,IAAI,CAAC,IAAI,CAACJ,SAAS,CAACI,IAAI,CAAC,EAAE;IACvC,OAAOW,WAAW,CAACX,IAAI,CAACG,QAAQ,CAAC;;EAErC,IAAIT,MAAM,CAACM,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACU,IAAI;EAClC,OAAO,EAAE;AACb;AAEA;;;;;;;;AAQA,OAAM,SAAUE,SAAS,CAACZ,IAAyB;EAC/C,IAAIO,KAAK,CAACC,OAAO,CAACR,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACI,GAAG,CAACQ,SAAS,CAAC,CAACP,IAAI,CAAC,EAAE,CAAC;EAC5D,IAAIV,WAAW,CAACK,IAAI,CAAC,KAAKA,IAAI,CAACa,IAAI,KAAKf,WAAW,CAACgB,GAAG,IAAIrB,OAAO,CAACO,IAAI,CAAC,CAAC,EAAE;IACvE,OAAOY,SAAS,CAACZ,IAAI,CAACG,QAAQ,CAAC;;EAEnC,IAAIT,MAAM,CAACM,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACU,IAAI;EAClC,OAAO,EAAE;AACb","names":["isTag","isCDATA","isText","hasChildren","isComment","renderHTML","ElementType","getOuterHTML","node","options","getInnerHTML","children","map","join","getText","Array","isArray","name","data","textContent","innerText","type","Tag"],"sources":["stringify.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}