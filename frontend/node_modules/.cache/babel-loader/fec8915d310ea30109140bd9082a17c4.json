{"ast":null,"code":"import _objectSpread from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag } from 'domhandler';\nfunction createTextNode(value) {\n  return new Text(value);\n}\nfunction enquoteDoctypeId(id) {\n  var quote = id.includes('\"') ? \"'\" : '\"';\n  return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n  var str = '!DOCTYPE ';\n  if (name) {\n    str += name;\n  }\n  if (publicId) {\n    str += \" PUBLIC \".concat(enquoteDoctypeId(publicId));\n  } else if (systemId) {\n    str += ' SYSTEM';\n  }\n  if (systemId) {\n    str += \" \".concat(enquoteDoctypeId(systemId));\n  }\n  return str;\n}\nexport var adapter = {\n  // Re-exports from domhandler\n  isCommentNode: isComment,\n  isElementNode: isTag,\n  isTextNode: isText,\n  //Node construction\n  createDocument: function createDocument() {\n    var node = new Document([]);\n    node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n    return node;\n  },\n  createDocumentFragment: function createDocumentFragment() {\n    return new Document([]);\n  },\n  createElement: function createElement(tagName, namespaceURI, attrs) {\n    var attribs = Object.create(null);\n    var attribsNamespace = Object.create(null);\n    var attribsPrefix = Object.create(null);\n    for (var i = 0; i < attrs.length; i++) {\n      var attrName = attrs[i].name;\n      attribs[attrName] = attrs[i].value;\n      attribsNamespace[attrName] = attrs[i].namespace;\n      attribsPrefix[attrName] = attrs[i].prefix;\n    }\n    var node = new Element(tagName, attribs, []);\n    node.namespace = namespaceURI;\n    node['x-attribsNamespace'] = attribsNamespace;\n    node['x-attribsPrefix'] = attribsPrefix;\n    return node;\n  },\n  createCommentNode: function createCommentNode(data) {\n    return new Comment(data);\n  },\n  //Tree mutation\n  appendChild: function appendChild(parentNode, newNode) {\n    var prev = parentNode.children[parentNode.children.length - 1];\n    if (prev) {\n      prev.next = newNode;\n      newNode.prev = prev;\n    }\n    parentNode.children.push(newNode);\n    newNode.parent = parentNode;\n  },\n  insertBefore: function insertBefore(parentNode, newNode, referenceNode) {\n    var insertionIdx = parentNode.children.indexOf(referenceNode);\n    var prev = referenceNode.prev;\n    if (prev) {\n      prev.next = newNode;\n      newNode.prev = prev;\n    }\n    referenceNode.prev = newNode;\n    newNode.next = referenceNode;\n    parentNode.children.splice(insertionIdx, 0, newNode);\n    newNode.parent = parentNode;\n  },\n  setTemplateContent: function setTemplateContent(templateElement, contentElement) {\n    adapter.appendChild(templateElement, contentElement);\n  },\n  getTemplateContent: function getTemplateContent(templateElement) {\n    return templateElement.children[0];\n  },\n  setDocumentType: function setDocumentType(document, name, publicId, systemId) {\n    var data = serializeDoctypeContent(name, publicId, systemId);\n    var doctypeNode = document.children.find(function (node) {\n      return isDirective(node) && node.name === '!doctype';\n    });\n    if (doctypeNode) {\n      doctypeNode.data = data !== null && data !== void 0 ? data : null;\n    } else {\n      doctypeNode = new ProcessingInstruction('!doctype', data);\n      adapter.appendChild(document, doctypeNode);\n    }\n    doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n    doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n    doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n  },\n  setDocumentMode: function setDocumentMode(document, mode) {\n    document['x-mode'] = mode;\n  },\n  getDocumentMode: function getDocumentMode(document) {\n    return document['x-mode'];\n  },\n  detachNode: function detachNode(node) {\n    if (node.parent) {\n      var idx = node.parent.children.indexOf(node);\n      var prev = node.prev,\n        next = node.next;\n      node.prev = null;\n      node.next = null;\n      if (prev) {\n        prev.next = next;\n      }\n      if (next) {\n        next.prev = prev;\n      }\n      node.parent.children.splice(idx, 1);\n      node.parent = null;\n    }\n  },\n  insertText: function insertText(parentNode, text) {\n    var lastChild = parentNode.children[parentNode.children.length - 1];\n    if (lastChild && isText(lastChild)) {\n      lastChild.data += text;\n    } else {\n      adapter.appendChild(parentNode, createTextNode(text));\n    }\n  },\n  insertTextBefore: function insertTextBefore(parentNode, text, referenceNode) {\n    var prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n    if (prevNode && isText(prevNode)) {\n      prevNode.data += text;\n    } else {\n      adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n  },\n  adoptAttributes: function adoptAttributes(recipient, attrs) {\n    for (var i = 0; i < attrs.length; i++) {\n      var attrName = attrs[i].name;\n      if (typeof recipient.attribs[attrName] === 'undefined') {\n        recipient.attribs[attrName] = attrs[i].value;\n        recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n        recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n      }\n    }\n  },\n  //Tree traversing\n  getFirstChild: function getFirstChild(node) {\n    return node.children[0];\n  },\n  getChildNodes: function getChildNodes(node) {\n    return node.children;\n  },\n  getParentNode: function getParentNode(node) {\n    return node.parent;\n  },\n  getAttrList: function getAttrList(element) {\n    return element.attributes;\n  },\n  //Node data\n  getTagName: function getTagName(element) {\n    return element.name;\n  },\n  getNamespaceURI: function getNamespaceURI(element) {\n    return element.namespace;\n  },\n  getTextNodeContent: function getTextNodeContent(textNode) {\n    return textNode.data;\n  },\n  getCommentNodeContent: function getCommentNodeContent(commentNode) {\n    return commentNode.data;\n  },\n  getDocumentTypeNodeName: function getDocumentTypeNodeName(doctypeNode) {\n    var _a;\n    return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n  },\n  getDocumentTypeNodePublicId: function getDocumentTypeNodePublicId(doctypeNode) {\n    var _a;\n    return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n  },\n  getDocumentTypeNodeSystemId: function getDocumentTypeNodeSystemId(doctypeNode) {\n    var _a;\n    return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n  },\n  //Node types\n  isDocumentTypeNode: function isDocumentTypeNode(node) {\n    return isDirective(node) && node.name === '!doctype';\n  },\n  // Source code location\n  setNodeSourceCodeLocation: function setNodeSourceCodeLocation(node, location) {\n    if (location) {\n      node.startIndex = location.startOffset;\n      node.endIndex = location.endOffset;\n    }\n    node.sourceCodeLocation = location;\n  },\n  getNodeSourceCodeLocation: function getNodeSourceCodeLocation(node) {\n    return node.sourceCodeLocation;\n  },\n  updateNodeSourceCodeLocation: function updateNodeSourceCodeLocation(node, endLocation) {\n    if (endLocation.endOffset != null) node.endIndex = endLocation.endOffset;\n    node.sourceCodeLocation = _objectSpread(_objectSpread({}, node.sourceCodeLocation), endLocation);\n  }\n};","map":{"version":3,"names":["html","Element","Document","ProcessingInstruction","Comment","Text","isDirective","isText","isComment","isTag","createTextNode","value","enquoteDoctypeId","id","quote","includes","serializeDoctypeContent","name","publicId","systemId","str","adapter","isCommentNode","isElementNode","isTextNode","createDocument","node","DOCUMENT_MODE","NO_QUIRKS","createDocumentFragment","createElement","tagName","namespaceURI","attrs","attribs","Object","create","attribsNamespace","attribsPrefix","i","length","attrName","namespace","prefix","createCommentNode","data","appendChild","parentNode","newNode","prev","children","next","push","parent","insertBefore","referenceNode","insertionIdx","indexOf","splice","setTemplateContent","templateElement","contentElement","getTemplateContent","setDocumentType","document","doctypeNode","find","undefined","setDocumentMode","mode","getDocumentMode","detachNode","idx","insertText","text","lastChild","insertTextBefore","prevNode","adoptAttributes","recipient","getFirstChild","getChildNodes","getParentNode","getAttrList","element","attributes","getTagName","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","_a","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isDocumentTypeNode","setNodeSourceCodeLocation","location","startIndex","startOffset","endIndex","endOffset","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation"],"sources":["C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/parse5-htmlparser2-tree-adapter/dist/index.js"],"sourcesContent":["import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag, } from 'domhandler';\nfunction createTextNode(value) {\n    return new Text(value);\n}\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexport const adapter = {\n    // Re-exports from domhandler\n    isCommentNode: isComment,\n    isElementNode: isTag,\n    isTextNode: isText,\n    //Node construction\n    createDocument() {\n        const node = new Document([]);\n        node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new Comment(data);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => isDirective(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new ProcessingInstruction('!doctype', data);\n            adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && isText(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            adapter.appendChild(parentNode, createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && isText(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === 'undefined') {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return isDirective(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation,\n        };\n    },\n};\n//# sourceMappingURL=index.js.map"],"mappings":";AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,SAASC,OAAO,EAAEC,QAAQ,EAAEC,qBAAqB,EAAEC,OAAO,EAAEC,IAAI,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,EAAEC,KAAK,QAAS,YAAY;AAC5H,SAASC,cAAc,CAACC,KAAK,EAAE;EAC3B,OAAO,IAAIN,IAAI,CAACM,KAAK,CAAC;AAC1B;AACA,SAASC,gBAAgB,CAACC,EAAE,EAAE;EAC1B,IAAMC,KAAK,GAAGD,EAAE,CAACE,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAC1C,OAAOD,KAAK,GAAGD,EAAE,GAAGC,KAAK;AAC7B;AACA;AACA,OAAO,SAASE,uBAAuB,CAACC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EAC9D,IAAIC,GAAG,GAAG,WAAW;EACrB,IAAIH,IAAI,EAAE;IACNG,GAAG,IAAIH,IAAI;EACf;EACA,IAAIC,QAAQ,EAAE;IACVE,GAAG,sBAAeR,gBAAgB,CAACM,QAAQ,CAAC,CAAE;EAClD,CAAC,MACI,IAAIC,QAAQ,EAAE;IACfC,GAAG,IAAI,SAAS;EACpB;EACA,IAAID,QAAQ,EAAE;IACVC,GAAG,eAAQR,gBAAgB,CAACO,QAAQ,CAAC,CAAE;EAC3C;EACA,OAAOC,GAAG;AACd;AACA,OAAO,IAAMC,OAAO,GAAG;EACnB;EACAC,aAAa,EAAEd,SAAS;EACxBe,aAAa,EAAEd,KAAK;EACpBe,UAAU,EAAEjB,MAAM;EAClB;EACAkB,cAAc,4BAAG;IACb,IAAMC,IAAI,GAAG,IAAIxB,QAAQ,CAAC,EAAE,CAAC;IAC7BwB,IAAI,CAAC,QAAQ,CAAC,GAAG1B,IAAI,CAAC2B,aAAa,CAACC,SAAS;IAC7C,OAAOF,IAAI;EACf,CAAC;EACDG,sBAAsB,oCAAG;IACrB,OAAO,IAAI3B,QAAQ,CAAC,EAAE,CAAC;EAC3B,CAAC;EACD4B,aAAa,yBAACC,OAAO,EAAEC,YAAY,EAAEC,KAAK,EAAE;IACxC,IAAMC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IACnC,IAAMC,gBAAgB,GAAGF,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC5C,IAAME,aAAa,GAAGH,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IACzC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;MACnC,IAAME,QAAQ,GAAGR,KAAK,CAACM,CAAC,CAAC,CAACtB,IAAI;MAC9BiB,OAAO,CAACO,QAAQ,CAAC,GAAGR,KAAK,CAACM,CAAC,CAAC,CAAC5B,KAAK;MAClC0B,gBAAgB,CAACI,QAAQ,CAAC,GAAGR,KAAK,CAACM,CAAC,CAAC,CAACG,SAAS;MAC/CJ,aAAa,CAACG,QAAQ,CAAC,GAAGR,KAAK,CAACM,CAAC,CAAC,CAACI,MAAM;IAC7C;IACA,IAAMjB,IAAI,GAAG,IAAIzB,OAAO,CAAC8B,OAAO,EAAEG,OAAO,EAAE,EAAE,CAAC;IAC9CR,IAAI,CAACgB,SAAS,GAAGV,YAAY;IAC7BN,IAAI,CAAC,oBAAoB,CAAC,GAAGW,gBAAgB;IAC7CX,IAAI,CAAC,iBAAiB,CAAC,GAAGY,aAAa;IACvC,OAAOZ,IAAI;EACf,CAAC;EACDkB,iBAAiB,6BAACC,IAAI,EAAE;IACpB,OAAO,IAAIzC,OAAO,CAACyC,IAAI,CAAC;EAC5B,CAAC;EACD;EACAC,WAAW,uBAACC,UAAU,EAAEC,OAAO,EAAE;IAC7B,IAAMC,IAAI,GAAGF,UAAU,CAACG,QAAQ,CAACH,UAAU,CAACG,QAAQ,CAACV,MAAM,GAAG,CAAC,CAAC;IAChE,IAAIS,IAAI,EAAE;MACNA,IAAI,CAACE,IAAI,GAAGH,OAAO;MACnBA,OAAO,CAACC,IAAI,GAAGA,IAAI;IACvB;IACAF,UAAU,CAACG,QAAQ,CAACE,IAAI,CAACJ,OAAO,CAAC;IACjCA,OAAO,CAACK,MAAM,GAAGN,UAAU;EAC/B,CAAC;EACDO,YAAY,wBAACP,UAAU,EAAEC,OAAO,EAAEO,aAAa,EAAE;IAC7C,IAAMC,YAAY,GAAGT,UAAU,CAACG,QAAQ,CAACO,OAAO,CAACF,aAAa,CAAC;IAC/D,IAAQN,IAAI,GAAKM,aAAa,CAAtBN,IAAI;IACZ,IAAIA,IAAI,EAAE;MACNA,IAAI,CAACE,IAAI,GAAGH,OAAO;MACnBA,OAAO,CAACC,IAAI,GAAGA,IAAI;IACvB;IACAM,aAAa,CAACN,IAAI,GAAGD,OAAO;IAC5BA,OAAO,CAACG,IAAI,GAAGI,aAAa;IAC5BR,UAAU,CAACG,QAAQ,CAACQ,MAAM,CAACF,YAAY,EAAE,CAAC,EAAER,OAAO,CAAC;IACpDA,OAAO,CAACK,MAAM,GAAGN,UAAU;EAC/B,CAAC;EACDY,kBAAkB,8BAACC,eAAe,EAAEC,cAAc,EAAE;IAChDxC,OAAO,CAACyB,WAAW,CAACc,eAAe,EAAEC,cAAc,CAAC;EACxD,CAAC;EACDC,kBAAkB,8BAACF,eAAe,EAAE;IAChC,OAAOA,eAAe,CAACV,QAAQ,CAAC,CAAC,CAAC;EACtC,CAAC;EACDa,eAAe,2BAACC,QAAQ,EAAE/C,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAChD,IAAM0B,IAAI,GAAG7B,uBAAuB,CAACC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;IAC9D,IAAI8C,WAAW,GAAGD,QAAQ,CAACd,QAAQ,CAACgB,IAAI,CAAC,UAACxC,IAAI;MAAA,OAAKpB,WAAW,CAACoB,IAAI,CAAC,IAAIA,IAAI,CAACT,IAAI,KAAK,UAAU;IAAA,EAAC;IACjG,IAAIgD,WAAW,EAAE;MACbA,WAAW,CAACpB,IAAI,GAAGA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAG,IAAI;IACrE,CAAC,MACI;MACDoB,WAAW,GAAG,IAAI9D,qBAAqB,CAAC,UAAU,EAAE0C,IAAI,CAAC;MACzDxB,OAAO,CAACyB,WAAW,CAACkB,QAAQ,EAAEC,WAAW,CAAC;IAC9C;IACAA,WAAW,CAAC,QAAQ,CAAC,GAAGhD,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAGkD,SAAS;IAC3EF,WAAW,CAAC,YAAY,CAAC,GAAG/C,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAGA,QAAQ,GAAGiD,SAAS;IAC3FF,WAAW,CAAC,YAAY,CAAC,GAAG9C,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAGA,QAAQ,GAAGgD,SAAS;EAC/F,CAAC;EACDC,eAAe,2BAACJ,QAAQ,EAAEK,IAAI,EAAE;IAC5BL,QAAQ,CAAC,QAAQ,CAAC,GAAGK,IAAI;EAC7B,CAAC;EACDC,eAAe,2BAACN,QAAQ,EAAE;IACtB,OAAOA,QAAQ,CAAC,QAAQ,CAAC;EAC7B,CAAC;EACDO,UAAU,sBAAC7C,IAAI,EAAE;IACb,IAAIA,IAAI,CAAC2B,MAAM,EAAE;MACb,IAAMmB,GAAG,GAAG9C,IAAI,CAAC2B,MAAM,CAACH,QAAQ,CAACO,OAAO,CAAC/B,IAAI,CAAC;MAC9C,IAAQuB,IAAI,GAAWvB,IAAI,CAAnBuB,IAAI;QAAEE,IAAI,GAAKzB,IAAI,CAAbyB,IAAI;MAClBzB,IAAI,CAACuB,IAAI,GAAG,IAAI;MAChBvB,IAAI,CAACyB,IAAI,GAAG,IAAI;MAChB,IAAIF,IAAI,EAAE;QACNA,IAAI,CAACE,IAAI,GAAGA,IAAI;MACpB;MACA,IAAIA,IAAI,EAAE;QACNA,IAAI,CAACF,IAAI,GAAGA,IAAI;MACpB;MACAvB,IAAI,CAAC2B,MAAM,CAACH,QAAQ,CAACQ,MAAM,CAACc,GAAG,EAAE,CAAC,CAAC;MACnC9C,IAAI,CAAC2B,MAAM,GAAG,IAAI;IACtB;EACJ,CAAC;EACDoB,UAAU,sBAAC1B,UAAU,EAAE2B,IAAI,EAAE;IACzB,IAAMC,SAAS,GAAG5B,UAAU,CAACG,QAAQ,CAACH,UAAU,CAACG,QAAQ,CAACV,MAAM,GAAG,CAAC,CAAC;IACrE,IAAImC,SAAS,IAAIpE,MAAM,CAACoE,SAAS,CAAC,EAAE;MAChCA,SAAS,CAAC9B,IAAI,IAAI6B,IAAI;IAC1B,CAAC,MACI;MACDrD,OAAO,CAACyB,WAAW,CAACC,UAAU,EAAErC,cAAc,CAACgE,IAAI,CAAC,CAAC;IACzD;EACJ,CAAC;EACDE,gBAAgB,4BAAC7B,UAAU,EAAE2B,IAAI,EAAEnB,aAAa,EAAE;IAC9C,IAAMsB,QAAQ,GAAG9B,UAAU,CAACG,QAAQ,CAACH,UAAU,CAACG,QAAQ,CAACO,OAAO,CAACF,aAAa,CAAC,GAAG,CAAC,CAAC;IACpF,IAAIsB,QAAQ,IAAItE,MAAM,CAACsE,QAAQ,CAAC,EAAE;MAC9BA,QAAQ,CAAChC,IAAI,IAAI6B,IAAI;IACzB,CAAC,MACI;MACDrD,OAAO,CAACiC,YAAY,CAACP,UAAU,EAAErC,cAAc,CAACgE,IAAI,CAAC,EAAEnB,aAAa,CAAC;IACzE;EACJ,CAAC;EACDuB,eAAe,2BAACC,SAAS,EAAE9C,KAAK,EAAE;IAC9B,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;MACnC,IAAME,QAAQ,GAAGR,KAAK,CAACM,CAAC,CAAC,CAACtB,IAAI;MAC9B,IAAI,OAAO8D,SAAS,CAAC7C,OAAO,CAACO,QAAQ,CAAC,KAAK,WAAW,EAAE;QACpDsC,SAAS,CAAC7C,OAAO,CAACO,QAAQ,CAAC,GAAGR,KAAK,CAACM,CAAC,CAAC,CAAC5B,KAAK;QAC5CoE,SAAS,CAAC,oBAAoB,CAAC,CAACtC,QAAQ,CAAC,GAAGR,KAAK,CAACM,CAAC,CAAC,CAACG,SAAS;QAC9DqC,SAAS,CAAC,iBAAiB,CAAC,CAACtC,QAAQ,CAAC,GAAGR,KAAK,CAACM,CAAC,CAAC,CAACI,MAAM;MAC5D;IACJ;EACJ,CAAC;EACD;EACAqC,aAAa,yBAACtD,IAAI,EAAE;IAChB,OAAOA,IAAI,CAACwB,QAAQ,CAAC,CAAC,CAAC;EAC3B,CAAC;EACD+B,aAAa,yBAACvD,IAAI,EAAE;IAChB,OAAOA,IAAI,CAACwB,QAAQ;EACxB,CAAC;EACDgC,aAAa,yBAACxD,IAAI,EAAE;IAChB,OAAOA,IAAI,CAAC2B,MAAM;EACtB,CAAC;EACD8B,WAAW,uBAACC,OAAO,EAAE;IACjB,OAAOA,OAAO,CAACC,UAAU;EAC7B,CAAC;EACD;EACAC,UAAU,sBAACF,OAAO,EAAE;IAChB,OAAOA,OAAO,CAACnE,IAAI;EACvB,CAAC;EACDsE,eAAe,2BAACH,OAAO,EAAE;IACrB,OAAOA,OAAO,CAAC1C,SAAS;EAC5B,CAAC;EACD8C,kBAAkB,8BAACC,QAAQ,EAAE;IACzB,OAAOA,QAAQ,CAAC5C,IAAI;EACxB,CAAC;EACD6C,qBAAqB,iCAACC,WAAW,EAAE;IAC/B,OAAOA,WAAW,CAAC9C,IAAI;EAC3B,CAAC;EACD+C,uBAAuB,mCAAC3B,WAAW,EAAE;IACjC,IAAI4B,EAAE;IACN,OAAO,CAACA,EAAE,GAAG5B,WAAW,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI4B,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;EAC3E,CAAC;EACDC,2BAA2B,uCAAC7B,WAAW,EAAE;IACrC,IAAI4B,EAAE;IACN,OAAO,CAACA,EAAE,GAAG5B,WAAW,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI4B,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;EAC/E,CAAC;EACDE,2BAA2B,uCAAC9B,WAAW,EAAE;IACrC,IAAI4B,EAAE;IACN,OAAO,CAACA,EAAE,GAAG5B,WAAW,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI4B,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;EAC/E,CAAC;EACD;EACAG,kBAAkB,8BAACtE,IAAI,EAAE;IACrB,OAAOpB,WAAW,CAACoB,IAAI,CAAC,IAAIA,IAAI,CAACT,IAAI,KAAK,UAAU;EACxD,CAAC;EACD;EACAgF,yBAAyB,qCAACvE,IAAI,EAAEwE,QAAQ,EAAE;IACtC,IAAIA,QAAQ,EAAE;MACVxE,IAAI,CAACyE,UAAU,GAAGD,QAAQ,CAACE,WAAW;MACtC1E,IAAI,CAAC2E,QAAQ,GAAGH,QAAQ,CAACI,SAAS;IACtC;IACA5E,IAAI,CAAC6E,kBAAkB,GAAGL,QAAQ;EACtC,CAAC;EACDM,yBAAyB,qCAAC9E,IAAI,EAAE;IAC5B,OAAOA,IAAI,CAAC6E,kBAAkB;EAClC,CAAC;EACDE,4BAA4B,wCAAC/E,IAAI,EAAEgF,WAAW,EAAE;IAC5C,IAAIA,WAAW,CAACJ,SAAS,IAAI,IAAI,EAC7B5E,IAAI,CAAC2E,QAAQ,GAAGK,WAAW,CAACJ,SAAS;IACzC5E,IAAI,CAAC6E,kBAAkB,mCAChB7E,IAAI,CAAC6E,kBAAkB,GACvBG,WAAW,CACjB;EACL;AACJ,CAAC"},"metadata":{},"sourceType":"module"}