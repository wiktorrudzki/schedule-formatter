{"ast":null,"code":"import { decodeXML, decodeHTML, decodeHTMLStrict } from \"./decode.js\";\nimport { encodeHTML, encodeNonAsciiHTML } from \"./encode.js\";\nimport { encodeXML, escapeUTF8, escapeAttribute, escapeText } from \"./escape.js\";\n/** The level of entities to support. */\nexport var EntityLevel;\n(function (EntityLevel) {\n  /** Support only XML entities. */\n  EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n  /** Support HTML entities, which are a superset of XML entities. */\n  EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})(EntityLevel || (EntityLevel = {}));\n/** Determines whether some entities are allowed to be written without a trailing `;`. */\nexport var DecodingMode;\n(function (DecodingMode) {\n  /** Support legacy HTML entities. */\n  DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n  /** Do not support legacy HTML entities. */\n  DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n})(DecodingMode || (DecodingMode = {}));\nexport var EncodingMode;\n(function (EncodingMode) {\n  /**\n   * The output is UTF-8 encoded. Only characters that need escaping within\n   * XML will be escaped.\n   */\n  EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n  /**\n   * The output consists only of ASCII characters. Characters that need\n   * escaping within HTML, and characters that aren't ASCII characters will\n   * be escaped.\n   */\n  EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n  /**\n   * Encode all characters that have an equivalent entity, as well as all\n   * characters that are not ASCII characters.\n   */\n  EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n  /**\n   * Encode all characters that have to be escaped in HTML attributes,\n   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n   */\n  EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n  /**\n   * Encode all characters that have to be escaped in HTML text,\n   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n   */\n  EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})(EncodingMode || (EncodingMode = {}));\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n */\nexport function decode(data) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EntityLevel.XML;\n  const opts = typeof options === \"number\" ? {\n    level: options\n  } : options;\n  if (opts.level === EntityLevel.HTML) {\n    if (opts.mode === DecodingMode.Strict) {\n      return decodeHTMLStrict(data);\n    }\n    return decodeHTML(data);\n  }\n  return decodeXML(data);\n}\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n * @deprecated Use `decode` with the `mode` set to `Strict`.\n */\nexport function decodeStrict(data) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EntityLevel.XML;\n  const opts = typeof options === \"number\" ? {\n    level: options\n  } : options;\n  if (opts.level === EntityLevel.HTML) {\n    if (opts.mode === DecodingMode.Legacy) {\n      return decodeHTML(data);\n    }\n    return decodeHTMLStrict(data);\n  }\n  return decodeXML(data);\n}\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param options Encoding options.\n */\nexport function encode(data) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EntityLevel.XML;\n  const opts = typeof options === \"number\" ? {\n    level: options\n  } : options;\n  // Mode `UTF8` just escapes XML entities\n  if (opts.mode === EncodingMode.UTF8) return escapeUTF8(data);\n  if (opts.mode === EncodingMode.Attribute) return escapeAttribute(data);\n  if (opts.mode === EncodingMode.Text) return escapeText(data);\n  if (opts.level === EntityLevel.HTML) {\n    if (opts.mode === EncodingMode.ASCII) {\n      return encodeNonAsciiHTML(data);\n    }\n    return encodeHTML(data);\n  }\n  // ASCII and Extensive are equivalent\n  return encodeXML(data);\n}\nexport { encodeXML, escape, escapeUTF8, escapeAttribute, escapeText } from \"./escape.js\";\nexport { encodeHTML, encodeNonAsciiHTML,\n// Legacy aliases (deprecated)\nencodeHTML as encodeHTML4, encodeHTML as encodeHTML5 } from \"./encode.js\";\nexport { decodeXML, decodeHTML, decodeHTMLStrict,\n// Legacy aliases (deprecated)\ndecodeHTML as decodeHTML4, decodeHTML as decodeHTML5, decodeHTMLStrict as decodeHTML4Strict, decodeHTMLStrict as decodeHTML5Strict, decodeXML as decodeXMLStrict } from \"./decode.js\";","map":{"version":3,"mappings":"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","names":["decodeXML","decodeHTML","decodeHTMLStrict","encodeHTML","encodeNonAsciiHTML","encodeXML","escapeUTF8","escapeAttribute","escapeText","EntityLevel","DecodingMode","EncodingMode","decode","data","options","XML","opts","level","HTML","mode","Strict","decodeStrict","Legacy","encode","UTF8","Attribute","Text","ASCII","escape","encodeHTML4","encodeHTML5","decodeHTML4","decodeHTML5","decodeHTML4Strict","decodeHTML5Strict","decodeXMLStrict"],"sources":["index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}