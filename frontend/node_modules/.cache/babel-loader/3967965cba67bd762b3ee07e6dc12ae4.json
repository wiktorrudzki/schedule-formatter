{"ast":null,"code":"var _jsxFileName = \"C:\\\\programowanko\\\\react\\\\schedule-formatter\\\\schedule-formatter\\\\src\\\\components\\\\template\\\\index.tsx\";\nimport \"./template.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Template = _ref => {\n  let {\n    rows,\n    columns\n  } = _ref;\n  const grid = rows * columns;\n  const date = new Date(\"December 14, 2026 07:30:00\");\n  const hoursAndMinutes = date.getHours() + \":\" + date.getMinutes();\n  console.log(hoursAndMinutes);\n  function addHours() {\n    let hours = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n    console.log(date);\n    return date.getHours() + \":\" + date.getMinutes();\n  }\n  console.log(addHours);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"template\",\n    children: [...Array(grid)].map(() => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Template;\nexport default Template;\nvar _c;\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"names":["Template","rows","columns","grid","date","Date","hoursAndMinutes","getHours","getMinutes","console","log","addHours","hours","setTime","getTime","Array","map"],"sources":["C:/programowanko/react/schedule-formatter/schedule-formatter/src/components/template/index.tsx"],"sourcesContent":["import \"./template.css\";\r\n\r\ntype Props = {\r\n  rows: number;\r\n  columns: number;\r\n};\r\n\r\nconst Template: React.FC<Props> = ({ rows, columns }) => {\r\n  const grid = rows * columns;\r\n\r\n  const date = new Date(\"December 14, 2026 07:30:00\");\r\n  const hoursAndMinutes = date.getHours() + \":\" + date.getMinutes();\r\n\r\n  console.log(hoursAndMinutes)\r\n\r\n  function addHours(hours = 1) {  \r\n    date.setTime(date.getTime() + (hours*60*60*1000));\r\n    console.log(date)\r\n    return date.getHours() + \":\" + date.getMinutes();\r\n  }\r\n\r\n  console.log(addHours)\r\n\r\n  return (\r\n    <div className=\"template\">\r\n      {[...Array(grid)].map(() => {\r\n        return <div className=\"cell\"></div>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Template;\r\n"],"mappings":";AAAA,OAAO,gBAAgB;AAAC;AAOxB,MAAMA,QAAyB,GAAG,QAAuB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC;EAClD,MAAMC,IAAI,GAAGF,IAAI,GAAGC,OAAO;EAE3B,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,4BAA4B,CAAC;EACnD,MAAMC,eAAe,GAAGF,IAAI,CAACG,QAAQ,EAAE,GAAG,GAAG,GAAGH,IAAI,CAACI,UAAU,EAAE;EAEjEC,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;EAE5B,SAASK,QAAQ,GAAY;IAAA,IAAXC,KAAK,uEAAG,CAAC;IACzBR,IAAI,CAACS,OAAO,CAACT,IAAI,CAACU,OAAO,EAAE,GAAIF,KAAK,GAAC,EAAE,GAAC,EAAE,GAAC,IAAK,CAAC;IACjDH,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAOA,IAAI,CAACG,QAAQ,EAAE,GAAG,GAAG,GAAGH,IAAI,CAACI,UAAU,EAAE;EAClD;EAEAC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAErB,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,UACtB,CAAC,GAAGI,KAAK,CAACZ,IAAI,CAAC,CAAC,CAACa,GAAG,CAAC,MAAM;MAC1B,oBAAO;QAAK,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAO;IACrC,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KAvBIhB,QAAyB;AAyB/B,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}