{"ast":null,"code":"var _jsxFileName = \"C:\\\\programowanko\\\\react\\\\schedule-formatter\\\\schedule-formatter\\\\src\\\\components\\\\template\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport \"./template.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Template = _ref => {\n  _s();\n  let {\n    rows,\n    columns,\n    daysOfWeek\n  } = _ref;\n  const grid = rows * columns;\n  const date = new Date(\"December 14, 2026 06:30:00\");\n  const [time, timeDispatch] = useReducer(reducer, date.getHours() + \":\" + date.getMinutes());\n  let hoursAndMinutes = date.getHours() + \":\" + date.getMinutes();\n  function addHours() {\n    let hours = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n    return date.getHours() + \":\" + date.getMinutes();\n  }\n  function addMinutes() {\n    let minutes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 45;\n    date.setMinutes(date.getMinutes() + minutes);\n    return date.getHours() + \":\" + date.getMinutes();\n  }\n  function addRemaining() {\n    let hoursAndMinutesList = hoursAndMinutes.split(\":\");\n    hoursAndMinutesList = hoursAndMinutesList.map((element, index) => {\n      if (element.length === 1 && index === 0) {\n        return \"0\" + element;\n      } else if (element.length === 1 && index === 1) {\n        return element + \"0\";\n      } else return element;\n    });\n    return hoursAndMinutesList.join(\":\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"template\",\n    children: [...Array(grid)].map((e, i) => {\n      if (i === 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }, this);\n      }\n      if (i < columns) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: daysOfWeek[i - 1]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      }\n      if (i % columns * 2 === 0) {\n        hoursAndMinutes = addMinutes();\n        hoursAndMinutes = addRemaining();\n      } else if (i % columns === 0) {\n        hoursAndMinutes = addHours();\n        hoursAndMinutes = addRemaining();\n      }\n      return i % columns === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: hoursAndMinutes\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Template, \"QtUBL/T9JYjABlhMAYXN9Ywoh2s=\");\n_c = Template;\nexport default Template;\nvar _c;\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"names":["useReducer","Template","rows","columns","daysOfWeek","grid","date","Date","time","timeDispatch","reducer","getHours","getMinutes","hoursAndMinutes","addHours","hours","setTime","getTime","addMinutes","minutes","setMinutes","addRemaining","hoursAndMinutesList","split","map","element","index","length","join","Array","e","i"],"sources":["C:/programowanko/react/schedule-formatter/schedule-formatter/src/components/template/index.tsx"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport \"./template.css\";\r\n\r\ntype Props = {\r\n  rows: number;\r\n  columns: number;\r\n  daysOfWeek: string[];\r\n};\r\n\r\nconst Template: React.FC<Props> = ({ rows, columns, daysOfWeek }) => {\r\n  const grid = rows * columns;\r\n\r\n  const date = new Date(\"December 14, 2026 06:30:00\");\r\n\r\n  const [time, timeDispatch] = useReducer(reducer, date.getHours() + \":\" + date.getMinutes())\r\n\r\n  let hoursAndMinutes = date.getHours() + \":\" + date.getMinutes();\r\n\r\n  function addHours(hours = 1) {\r\n    date.setTime(date.getTime() + hours * 60 * 60 * 1000);\r\n    return date.getHours() + \":\" + date.getMinutes();\r\n  }\r\n\r\n  function addMinutes(minutes = 45) {\r\n    date.setMinutes(date.getMinutes() + minutes);\r\n\r\n    return date.getHours() + \":\" + date.getMinutes();\r\n  }\r\n\r\n  function addRemaining() {\r\n    let hoursAndMinutesList = hoursAndMinutes.split(\":\");\r\n    hoursAndMinutesList = hoursAndMinutesList.map((element, index) => {\r\n      if (element.length === 1 && index === 0) {\r\n        return \"0\" + element;\r\n      } else if (element.length === 1 && index === 1) {\r\n        return element + \"0\";\r\n      } else return element;\r\n    });\r\n    return hoursAndMinutesList.join(\":\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"template\">\r\n      {[...Array(grid)].map((e, i) => {\r\n        if (i === 0) {\r\n          return <div key={i} className=\"cell\"></div>;\r\n        }\r\n\r\n        if (i < columns) {\r\n          return (\r\n            <div key={i} className=\"cell\">\r\n              {daysOfWeek[i - 1]}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (i % columns*2 === 0) {\r\n          hoursAndMinutes = addMinutes();\r\n          hoursAndMinutes = addRemaining();\r\n        } else if (i % columns === 0) {\r\n          hoursAndMinutes = addHours();\r\n          hoursAndMinutes = addRemaining();\r\n        }\r\n\r\n        return i % columns === 0 ? (\r\n          <div key={i} className=\"cell\">\r\n            {hoursAndMinutes}\r\n          </div>\r\n        ) : (\r\n          <div key={i} className=\"cell\"></div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Template;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,gBAAgB;AAAC;AAQxB,MAAMC,QAAyB,GAAG,QAAmC;EAAA;EAAA,IAAlC;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAW,CAAC;EAC9D,MAAMC,IAAI,GAAGH,IAAI,GAAGC,OAAO;EAE3B,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAAC,4BAA4B,CAAC;EAEnD,MAAM,CAACC,IAAI,EAAEC,YAAY,CAAC,GAAGT,UAAU,CAACU,OAAO,EAAEJ,IAAI,CAACK,QAAQ,EAAE,GAAG,GAAG,GAAGL,IAAI,CAACM,UAAU,EAAE,CAAC;EAE3F,IAAIC,eAAe,GAAGP,IAAI,CAACK,QAAQ,EAAE,GAAG,GAAG,GAAGL,IAAI,CAACM,UAAU,EAAE;EAE/D,SAASE,QAAQ,GAAY;IAAA,IAAXC,KAAK,uEAAG,CAAC;IACzBT,IAAI,CAACU,OAAO,CAACV,IAAI,CAACW,OAAO,EAAE,GAAGF,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IACrD,OAAOT,IAAI,CAACK,QAAQ,EAAE,GAAG,GAAG,GAAGL,IAAI,CAACM,UAAU,EAAE;EAClD;EAEA,SAASM,UAAU,GAAe;IAAA,IAAdC,OAAO,uEAAG,EAAE;IAC9Bb,IAAI,CAACc,UAAU,CAACd,IAAI,CAACM,UAAU,EAAE,GAAGO,OAAO,CAAC;IAE5C,OAAOb,IAAI,CAACK,QAAQ,EAAE,GAAG,GAAG,GAAGL,IAAI,CAACM,UAAU,EAAE;EAClD;EAEA,SAASS,YAAY,GAAG;IACtB,IAAIC,mBAAmB,GAAGT,eAAe,CAACU,KAAK,CAAC,GAAG,CAAC;IACpDD,mBAAmB,GAAGA,mBAAmB,CAACE,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MAChE,IAAID,OAAO,CAACE,MAAM,KAAK,CAAC,IAAID,KAAK,KAAK,CAAC,EAAE;QACvC,OAAO,GAAG,GAAGD,OAAO;MACtB,CAAC,MAAM,IAAIA,OAAO,CAACE,MAAM,KAAK,CAAC,IAAID,KAAK,KAAK,CAAC,EAAE;QAC9C,OAAOD,OAAO,GAAG,GAAG;MACtB,CAAC,MAAM,OAAOA,OAAO;IACvB,CAAC,CAAC;IACF,OAAOH,mBAAmB,CAACM,IAAI,CAAC,GAAG,CAAC;EACtC;EAEA,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,UACtB,CAAC,GAAGC,KAAK,CAACxB,IAAI,CAAC,CAAC,CAACmB,GAAG,CAAC,CAACM,CAAC,EAAEC,CAAC,KAAK;MAC9B,IAAIA,CAAC,KAAK,CAAC,EAAE;QACX,oBAAO;UAAa,SAAS,EAAC;QAAM,GAAnBA,CAAC;UAAA;UAAA;UAAA;QAAA,QAAyB;MAC7C;MAEA,IAAIA,CAAC,GAAG5B,OAAO,EAAE;QACf,oBACE;UAAa,SAAS,EAAC,MAAM;UAAA,UAC1BC,UAAU,CAAC2B,CAAC,GAAG,CAAC;QAAC,GADVA,CAAC;UAAA;UAAA;UAAA;QAAA,QAEL;MAEV;MAEA,IAAIA,CAAC,GAAG5B,OAAO,GAAC,CAAC,KAAK,CAAC,EAAE;QACvBU,eAAe,GAAGK,UAAU,EAAE;QAC9BL,eAAe,GAAGQ,YAAY,EAAE;MAClC,CAAC,MAAM,IAAIU,CAAC,GAAG5B,OAAO,KAAK,CAAC,EAAE;QAC5BU,eAAe,GAAGC,QAAQ,EAAE;QAC5BD,eAAe,GAAGQ,YAAY,EAAE;MAClC;MAEA,OAAOU,CAAC,GAAG5B,OAAO,KAAK,CAAC,gBACtB;QAAa,SAAS,EAAC,MAAM;QAAA,UAC1BU;MAAe,GADRkB,CAAC;QAAA;QAAA;QAAA;MAAA,QAEL,gBAEN;QAAa,SAAS,EAAC;MAAM,GAAnBA,CAAC;QAAA;QAAA;QAAA;MAAA,QACZ;IACH,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAjEI9B,QAAyB;AAAA,KAAzBA,QAAyB;AAmE/B,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}