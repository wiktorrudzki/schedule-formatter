{"ast":null,"code":"import _classCallCheck from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nvar formTags = new Set([\"input\", \"option\", \"optgroup\", \"select\", \"button\", \"datalist\", \"textarea\"]);\nvar pTag = new Set([\"p\"]);\nvar tableSectionTags = new Set([\"thead\", \"tbody\"]);\nvar ddtTags = new Set([\"dd\", \"dt\"]);\nvar rtpTags = new Set([\"rt\", \"rp\"]);\nvar openImpliesClose = new Map([[\"tr\", new Set([\"tr\", \"th\", \"td\"])], [\"th\", new Set([\"th\"])], [\"td\", new Set([\"thead\", \"th\", \"td\"])], [\"body\", new Set([\"head\", \"link\", \"script\"])], [\"li\", new Set([\"li\"])], [\"p\", pTag], [\"h1\", pTag], [\"h2\", pTag], [\"h3\", pTag], [\"h4\", pTag], [\"h5\", pTag], [\"h6\", pTag], [\"select\", formTags], [\"input\", formTags], [\"output\", formTags], [\"button\", formTags], [\"datalist\", formTags], [\"textarea\", formTags], [\"option\", new Set([\"option\"])], [\"optgroup\", new Set([\"optgroup\", \"option\"])], [\"dd\", ddtTags], [\"dt\", ddtTags], [\"address\", pTag], [\"article\", pTag], [\"aside\", pTag], [\"blockquote\", pTag], [\"details\", pTag], [\"div\", pTag], [\"dl\", pTag], [\"fieldset\", pTag], [\"figcaption\", pTag], [\"figure\", pTag], [\"footer\", pTag], [\"form\", pTag], [\"header\", pTag], [\"hr\", pTag], [\"main\", pTag], [\"nav\", pTag], [\"ol\", pTag], [\"pre\", pTag], [\"section\", pTag], [\"table\", pTag], [\"ul\", pTag], [\"rt\", rtpTags], [\"rp\", rtpTags], [\"tbody\", tableSectionTags], [\"tfoot\", tableSectionTags]]);\nvar voidElements = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\nvar foreignContextElements = new Set([\"math\", \"svg\"]);\nvar htmlIntegrationElements = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignobject\", \"desc\", \"title\"]);\nvar reNameEnd = /\\s|\\//;\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(cbs) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Parser);\n    var _a, _b, _c, _d, _e;\n    this.options = options;\n    /** The start index of the last event. */\n    this.startIndex = 0;\n    /** The end index of the last event. */\n    this.endIndex = 0;\n    /**\n     * Store the start index of the current open tag,\n     * so we can update the start index for attributes.\n     */\n    this.openTagStart = 0;\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribvalue = \"\";\n    this.attribs = null;\n    this.stack = [];\n    this.foreignContext = [];\n    this.buffers = [];\n    this.bufferOffset = 0;\n    /** The index of the last written buffer. Used when resuming after a `pause()`. */\n    this.writeIndex = 0;\n    /** Indicates whether the parser has finished running / `.end` has been called. */\n    this.ended = false;\n    this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n    this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;\n    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;\n    this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer)(this.options, this);\n    (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);\n  }\n  // Tokenizer event handlers\n  /** @internal */\n  _createClass(Parser, [{\n    key: \"ontext\",\n    value: function ontext(start, endIndex) {\n      var _a, _b;\n      var data = this.getSlice(start, endIndex);\n      this.endIndex = endIndex - 1;\n      (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n      this.startIndex = endIndex;\n    }\n    /** @internal */\n  }, {\n    key: \"ontextentity\",\n    value: function ontextentity(cp) {\n      var _a, _b;\n      /*\n       * Entities can be emitted on the character, or directly after.\n       * We use the section start here to get accurate indices.\n       */\n      var idx = this.tokenizer.getSectionStart();\n      this.endIndex = idx - 1;\n      (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n      this.startIndex = idx;\n    }\n  }, {\n    key: \"isVoidElement\",\n    value: function isVoidElement(name) {\n      return !this.options.xmlMode && voidElements.has(name);\n    }\n    /** @internal */\n  }, {\n    key: \"onopentagname\",\n    value: function onopentagname(start, endIndex) {\n      this.endIndex = endIndex;\n      var name = this.getSlice(start, endIndex);\n      if (this.lowerCaseTagNames) {\n        name = name.toLowerCase();\n      }\n      this.emitOpenTag(name);\n    }\n  }, {\n    key: \"emitOpenTag\",\n    value: function emitOpenTag(name) {\n      var _a, _b, _c, _d;\n      this.openTagStart = this.startIndex;\n      this.tagname = name;\n      var impliesClose = !this.options.xmlMode && openImpliesClose.get(name);\n      if (impliesClose) {\n        while (this.stack.length > 0 && impliesClose.has(this.stack[this.stack.length - 1])) {\n          var el = this.stack.pop();\n          (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, el, true);\n        }\n      }\n      if (!this.isVoidElement(name)) {\n        this.stack.push(name);\n        if (foreignContextElements.has(name)) {\n          this.foreignContext.push(true);\n        } else if (htmlIntegrationElements.has(name)) {\n          this.foreignContext.push(false);\n        }\n      }\n      (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n      if (this.cbs.onopentag) this.attribs = {};\n    }\n  }, {\n    key: \"endOpenTag\",\n    value: function endOpenTag(isImplied) {\n      var _a, _b;\n      this.startIndex = this.openTagStart;\n      if (this.attribs) {\n        (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n        this.attribs = null;\n      }\n      if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n        this.cbs.onclosetag(this.tagname, true);\n      }\n      this.tagname = \"\";\n    }\n    /** @internal */\n  }, {\n    key: \"onopentagend\",\n    value: function onopentagend(endIndex) {\n      this.endIndex = endIndex;\n      this.endOpenTag(false);\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n  }, {\n    key: \"onclosetag\",\n    value: function onclosetag(start, endIndex) {\n      var _a, _b, _c, _d, _e, _f;\n      this.endIndex = endIndex;\n      var name = this.getSlice(start, endIndex);\n      if (this.lowerCaseTagNames) {\n        name = name.toLowerCase();\n      }\n      if (foreignContextElements.has(name) || htmlIntegrationElements.has(name)) {\n        this.foreignContext.pop();\n      }\n      if (!this.isVoidElement(name)) {\n        var pos = this.stack.lastIndexOf(name);\n        if (pos !== -1) {\n          if (this.cbs.onclosetag) {\n            var count = this.stack.length - pos;\n            while (count--) {\n              // We know the stack has sufficient elements.\n              this.cbs.onclosetag(this.stack.pop(), count !== 0);\n            }\n          } else this.stack.length = pos;\n        } else if (!this.options.xmlMode && name === \"p\") {\n          // Implicit open before close\n          this.emitOpenTag(\"p\");\n          this.closeCurrentTag(true);\n        }\n      } else if (!this.options.xmlMode && name === \"br\") {\n        // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n        (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, \"br\");\n        (_d = (_c = this.cbs).onopentag) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\", {}, true);\n        (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", false);\n      }\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n  }, {\n    key: \"onselfclosingtag\",\n    value: function onselfclosingtag(endIndex) {\n      this.endIndex = endIndex;\n      if (this.options.xmlMode || this.options.recognizeSelfClosing || this.foreignContext[this.foreignContext.length - 1]) {\n        this.closeCurrentTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n      } else {\n        // Ignore the fact that the tag is self-closing.\n        this.onopentagend(endIndex);\n      }\n    }\n  }, {\n    key: \"closeCurrentTag\",\n    value: function closeCurrentTag(isOpenImplied) {\n      var _a, _b;\n      var name = this.tagname;\n      this.endOpenTag(isOpenImplied);\n      // Self-closing tags will be on the top of the stack\n      if (this.stack[this.stack.length - 1] === name) {\n        // If the opening tag isn't implied, the closing tag has to be implied.\n        (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n        this.stack.pop();\n      }\n    }\n    /** @internal */\n  }, {\n    key: \"onattribname\",\n    value: function onattribname(start, endIndex) {\n      this.startIndex = start;\n      var name = this.getSlice(start, endIndex);\n      this.attribname = this.lowerCaseAttributeNames ? name.toLowerCase() : name;\n    }\n    /** @internal */\n  }, {\n    key: \"onattribdata\",\n    value: function onattribdata(start, endIndex) {\n      this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n  }, {\n    key: \"onattribentity\",\n    value: function onattribentity(cp) {\n      this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n  }, {\n    key: \"onattribend\",\n    value: function onattribend(quote, endIndex) {\n      var _a, _b;\n      this.endIndex = endIndex;\n      (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double ? '\"' : quote === QuoteType.Single ? \"'\" : quote === QuoteType.NoValue ? undefined : null);\n      if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n        this.attribs[this.attribname] = this.attribvalue;\n      }\n      this.attribvalue = \"\";\n    }\n  }, {\n    key: \"getInstructionName\",\n    value: function getInstructionName(value) {\n      var idx = value.search(reNameEnd);\n      var name = idx < 0 ? value : value.substr(0, idx);\n      if (this.lowerCaseTagNames) {\n        name = name.toLowerCase();\n      }\n      return name;\n    }\n    /** @internal */\n  }, {\n    key: \"ondeclaration\",\n    value: function ondeclaration(start, endIndex) {\n      this.endIndex = endIndex;\n      var value = this.getSlice(start, endIndex);\n      if (this.cbs.onprocessinginstruction) {\n        var name = this.getInstructionName(value);\n        this.cbs.onprocessinginstruction(\"!\".concat(name), \"!\".concat(value));\n      }\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n  }, {\n    key: \"onprocessinginstruction\",\n    value: function onprocessinginstruction(start, endIndex) {\n      this.endIndex = endIndex;\n      var value = this.getSlice(start, endIndex);\n      if (this.cbs.onprocessinginstruction) {\n        var name = this.getInstructionName(value);\n        this.cbs.onprocessinginstruction(\"?\".concat(name), \"?\".concat(value));\n      }\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n  }, {\n    key: \"oncomment\",\n    value: function oncomment(start, endIndex, offset) {\n      var _a, _b, _c, _d;\n      this.endIndex = endIndex;\n      (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n      (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n  }, {\n    key: \"oncdata\",\n    value: function oncdata(start, endIndex, offset) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n      this.endIndex = endIndex;\n      var value = this.getSlice(start, endIndex - offset);\n      if (this.options.xmlMode || this.options.recognizeCDATA) {\n        (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n        (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n      } else {\n        (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, \"[CDATA[\".concat(value, \"]]\"));\n        (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n      }\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n  }, {\n    key: \"onend\",\n    value: function onend() {\n      var _a, _b;\n      if (this.cbs.onclosetag) {\n        // Set the end index for all remaining tags\n        this.endIndex = this.startIndex;\n        for (var i = this.stack.length; i > 0; this.cbs.onclosetag(this.stack[--i], true)) {\n          ;\n        }\n      }\n      (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _a, _b, _c, _d;\n      (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n      this.tokenizer.reset();\n      this.tagname = \"\";\n      this.attribname = \"\";\n      this.attribs = null;\n      this.stack.length = 0;\n      this.startIndex = 0;\n      this.endIndex = 0;\n      (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n      this.buffers.length = 0;\n      this.bufferOffset = 0;\n      this.writeIndex = 0;\n      this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n  }, {\n    key: \"parseComplete\",\n    value: function parseComplete(data) {\n      this.reset();\n      this.end(data);\n    }\n  }, {\n    key: \"getSlice\",\n    value: function getSlice(start, end) {\n      while (start - this.bufferOffset >= this.buffers[0].length) {\n        this.shiftBuffer();\n      }\n      var str = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n      while (end - this.bufferOffset > this.buffers[0].length) {\n        this.shiftBuffer();\n        str += this.buffers[0].slice(0, end - this.bufferOffset);\n      }\n      return str;\n    }\n  }, {\n    key: \"shiftBuffer\",\n    value: function shiftBuffer() {\n      this.bufferOffset += this.buffers[0].length;\n      this.writeIndex--;\n      this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n  }, {\n    key: \"write\",\n    value: function write(chunk) {\n      var _a, _b;\n      if (this.ended) {\n        (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n        return;\n      }\n      this.buffers.push(chunk);\n      if (this.tokenizer.running) {\n        this.tokenizer.write(chunk);\n        this.writeIndex++;\n      }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n  }, {\n    key: \"end\",\n    value: function end(chunk) {\n      var _a, _b;\n      if (this.ended) {\n        (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, Error(\".end() after done!\"));\n        return;\n      }\n      if (chunk) this.write(chunk);\n      this.ended = true;\n      this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.tokenizer.resume();\n      while (this.tokenizer.running && this.writeIndex < this.buffers.length) {\n        this.tokenizer.write(this.buffers[this.writeIndex++]);\n      }\n      if (this.ended) this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n  }, {\n    key: \"parseChunk\",\n    value: function parseChunk(chunk) {\n      this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n  }, {\n    key: \"done\",\n    value: function done(chunk) {\n      this.end(chunk);\n    }\n  }]);\n  return Parser;\n}();","map":{"version":3,"mappings":"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","names":["Tokenizer","QuoteType","fromCodePoint","formTags","Set","pTag","tableSectionTags","ddtTags","rtpTags","openImpliesClose","Map","voidElements","foreignContextElements","htmlIntegrationElements","reNameEnd","Parser","cbs","options","lowerCaseTagNames","lowerCaseTags","xmlMode","lowerCaseAttributeNames","tokenizer","onparserinit","start","endIndex","data","getSlice","ontext","startIndex","cp","idx","getSectionStart","name","has","toLowerCase","emitOpenTag","openTagStart","tagname","impliesClose","get","stack","length","el","pop","onclosetag","isVoidElement","push","foreignContext","onopentagname","onopentag","attribs","isImplied","endOpenTag","pos","lastIndexOf","count","closeCurrentTag","recognizeSelfClosing","onopentagend","isOpenImplied","attribname","attribvalue","quote","onattribute","Double","Single","NoValue","undefined","Object","prototype","hasOwnProperty","call","value","search","substr","onprocessinginstruction","getInstructionName","offset","oncomment","oncommentend","recognizeCDATA","oncdatastart","oncdataend","i","onend","onreset","reset","buffers","bufferOffset","writeIndex","ended","end","shiftBuffer","str","slice","shift","chunk","onerror","Error","running","write","pause","resume"],"sources":["Parser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}