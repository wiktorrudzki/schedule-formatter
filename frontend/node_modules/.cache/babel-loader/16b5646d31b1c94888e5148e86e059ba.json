{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTraversal = void 0;\nvar css_what_1 = require(\"css-what\");\nvar procedure = new Map([[css_what_1.SelectorType.Universal, 50], [css_what_1.SelectorType.Tag, 30], [css_what_1.SelectorType.Attribute, 1], [css_what_1.SelectorType.Pseudo, 0]]);\nfunction isTraversal(token) {\n  return !procedure.has(token.type);\n}\nexports.isTraversal = isTraversal;\nvar attributes = new Map([[css_what_1.AttributeAction.Exists, 10], [css_what_1.AttributeAction.Equals, 8], [css_what_1.AttributeAction.Not, 7], [css_what_1.AttributeAction.Start, 6], [css_what_1.AttributeAction.End, 6], [css_what_1.AttributeAction.Any, 5]]);\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nfunction sortByProcedure(arr) {\n  var procs = arr.map(getProcedure);\n  for (var i = 1; i < arr.length; i++) {\n    var procNew = procs[i];\n    if (procNew < 0) continue;\n    for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n      var token = arr[j + 1];\n      arr[j + 1] = arr[j];\n      arr[j] = token;\n      procs[j + 1] = procs[j];\n      procs[j] = procNew;\n    }\n  }\n}\nexports.default = sortByProcedure;\nfunction getProcedure(token) {\n  var _a, _b;\n  var proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n  if (token.type === css_what_1.SelectorType.Attribute) {\n    proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n    if (token.action === css_what_1.AttributeAction.Equals && token.name === \"id\") {\n      // Prefer ID selectors (eg. #ID)\n      proc = 9;\n    }\n    if (token.ignoreCase) {\n      /*\n       * IgnoreCase adds some overhead, prefer \"normal\" token\n       * this is a binary operation, to ensure it's still an int\n       */\n      proc >>= 1;\n    }\n  } else if (token.type === css_what_1.SelectorType.Pseudo) {\n    if (!token.data) {\n      proc = 3;\n    } else if (token.name === \"has\" || token.name === \"contains\") {\n      proc = 0; // Expensive in any case\n    } else if (Array.isArray(token.data)) {\n      // Eg. :matches, :not\n      proc = Math.min.apply(Math, token.data.map(function (d) {\n        return Math.min.apply(Math, d.map(getProcedure));\n      }));\n      // If we have traversals, try to avoid executing this selector\n      if (proc < 0) {\n        proc = 0;\n      }\n    } else {\n      proc = 2;\n    }\n  }\n  return proc;\n}","map":{"version":3,"mappings":"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","names":["procedure","Map","css_what_1","Universal","Tag","Attribute","Pseudo","isTraversal","token","has","type","exports","attributes","Exists","Equals","Not","Start","End","Any","sortByProcedure","arr","procs","map","getProcedure","i","length","procNew","j","proc","get","action","name","ignoreCase","data","Array","isArray","Math","min","d"],"sources":["sort.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}