{"ast":null,"code":"import _classCallCheck from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { htmlDecodeTree, xmlDecodeTree, BinTrieFlags, determineBranch, replaceCodePoint } from \"entities/lib/decode.js\";\nvar CharCodes;\n(function (CharCodes) {\n  CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n  CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n  CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n  CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n  CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n  CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n  CharCodes[CharCodes[\"Num\"] = 35] = \"Num\";\n  CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n  CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n  CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n  CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n  CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n  CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n  CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n  CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n  CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n  CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n  CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n  CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n  CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n  CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n  CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n  CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n  CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n  CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n  CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n  CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n  State[State[\"Text\"] = 1] = \"Text\";\n  State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n  State[State[\"InTagName\"] = 3] = \"InTagName\";\n  State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n  State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n  State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n  State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n  // Attributes\n  State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n  State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n  State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n  State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n  State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n  State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n  State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n  // Declarations\n  State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n  State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n  // Processing instructions\n  State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n  // Comments & CDATA\n  State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n  State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n  State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n  State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n  // Special tags\n  State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n  State[State[\"SpecialStartSequence\"] = 23] = \"SpecialStartSequence\";\n  State[State[\"InSpecialTag\"] = 24] = \"InSpecialTag\";\n  State[State[\"BeforeEntity\"] = 25] = \"BeforeEntity\";\n  State[State[\"BeforeNumericEntity\"] = 26] = \"BeforeNumericEntity\";\n  State[State[\"InNamedEntity\"] = 27] = \"InNamedEntity\";\n  State[State[\"InNumericEntity\"] = 28] = \"InNumericEntity\";\n  State[State[\"InHexEntity\"] = 29] = \"InHexEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n  return c === CharCodes.Space || c === CharCodes.NewLine || c === CharCodes.Tab || c === CharCodes.FormFeed || c === CharCodes.CarriageReturn;\n}\nfunction isEndOfTagSection(c) {\n  return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isNumber(c) {\n  return c >= CharCodes.Zero && c <= CharCodes.Nine;\n}\nfunction isASCIIAlpha(c) {\n  return c >= CharCodes.LowerA && c <= CharCodes.LowerZ || c >= CharCodes.UpperA && c <= CharCodes.UpperZ;\n}\nfunction isHexDigit(c) {\n  return c >= CharCodes.UpperA && c <= CharCodes.UpperF || c >= CharCodes.LowerA && c <= CharCodes.LowerF;\n}\nexport var QuoteType;\n(function (QuoteType) {\n  QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n  QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n  QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n  QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nvar Sequences = {\n  Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n  CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n  CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n  ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n  StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n  TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]) // `</title`\n};\nvar Tokenizer = /*#__PURE__*/function () {\n  function Tokenizer(_ref, cbs) {\n    var _ref$xmlMode = _ref.xmlMode,\n      xmlMode = _ref$xmlMode === void 0 ? false : _ref$xmlMode,\n      _ref$decodeEntities = _ref.decodeEntities,\n      decodeEntities = _ref$decodeEntities === void 0 ? true : _ref$decodeEntities;\n    _classCallCheck(this, Tokenizer);\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = State.Text;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = State.Text;\n    /** For special parsing behavior inside of script and style tags. */\n    this.isSpecial = false;\n    /** Indicates whether the tokenizer has been paused. */\n    this.running = true;\n    /** The offset of the current buffer. */\n    this.offset = 0;\n    this.sequenceIndex = 0;\n    this.trieIndex = 0;\n    this.trieCurrent = 0;\n    /** For named entities, the index of the value. For numeric entities, the code point. */\n    this.entityResult = 0;\n    this.entityExcess = 0;\n    this.xmlMode = xmlMode;\n    this.decodeEntities = decodeEntities;\n    this.entityTrie = xmlMode ? xmlDecodeTree : htmlDecodeTree;\n  }\n  _createClass(Tokenizer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.state = State.Text;\n      this.buffer = \"\";\n      this.sectionStart = 0;\n      this.index = 0;\n      this.baseState = State.Text;\n      this.currentSequence = undefined;\n      this.running = true;\n      this.offset = 0;\n    }\n  }, {\n    key: \"write\",\n    value: function write(chunk) {\n      this.offset += this.buffer.length;\n      this.buffer = chunk;\n      this.parse();\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (this.running) this.finish();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.running = false;\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.running = true;\n      if (this.index < this.buffer.length + this.offset) {\n        this.parse();\n      }\n    }\n    /**\n     * The current index within all of the written data.\n     */\n  }, {\n    key: \"getIndex\",\n    value: function getIndex() {\n      return this.index;\n    }\n    /**\n     * The start of the current section.\n     */\n  }, {\n    key: \"getSectionStart\",\n    value: function getSectionStart() {\n      return this.sectionStart;\n    }\n  }, {\n    key: \"stateText\",\n    value: function stateText(c) {\n      if (c === CharCodes.Lt || !this.decodeEntities && this.fastForwardTo(CharCodes.Lt)) {\n        if (this.index > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, this.index);\n        }\n        this.state = State.BeforeTagName;\n        this.sectionStart = this.index;\n      } else if (this.decodeEntities && c === CharCodes.Amp) {\n        this.state = State.BeforeEntity;\n      }\n    }\n  }, {\n    key: \"stateSpecialStartSequence\",\n    value: function stateSpecialStartSequence(c) {\n      var isEnd = this.sequenceIndex === this.currentSequence.length;\n      var isMatch = isEnd ?\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c) :\n      // Otherwise, do a case-insensitive comparison\n      (c | 0x20) === this.currentSequence[this.sequenceIndex];\n      if (!isMatch) {\n        this.isSpecial = false;\n      } else if (!isEnd) {\n        this.sequenceIndex++;\n        return;\n      }\n      this.sequenceIndex = 0;\n      this.state = State.InTagName;\n      this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n  }, {\n    key: \"stateInSpecialTag\",\n    value: function stateInSpecialTag(c) {\n      if (this.sequenceIndex === this.currentSequence.length) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n          var endOfText = this.index - this.currentSequence.length;\n          if (this.sectionStart < endOfText) {\n            // Spoof the index so that reported locations match up.\n            var actualIndex = this.index;\n            this.index = endOfText;\n            this.cbs.ontext(this.sectionStart, endOfText);\n            this.index = actualIndex;\n          }\n          this.isSpecial = false;\n          this.sectionStart = endOfText + 2; // Skip over the `</`\n          this.stateInClosingTagName(c);\n          return; // We are done; skip the rest of the function.\n        }\n\n        this.sequenceIndex = 0;\n      }\n      if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n        this.sequenceIndex += 1;\n      } else if (this.sequenceIndex === 0) {\n        if (this.currentSequence === Sequences.TitleEnd) {\n          // We have to parse entities in <title> tags.\n          if (this.decodeEntities && c === CharCodes.Amp) {\n            this.state = State.BeforeEntity;\n          }\n        } else if (this.fastForwardTo(CharCodes.Lt)) {\n          // Outside of <title> tags, we can fast-forward.\n          this.sequenceIndex = 1;\n        }\n      } else {\n        // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n        this.sequenceIndex = Number(c === CharCodes.Lt);\n      }\n    }\n  }, {\n    key: \"stateCDATASequence\",\n    value: function stateCDATASequence(c) {\n      if (c === Sequences.Cdata[this.sequenceIndex]) {\n        if (++this.sequenceIndex === Sequences.Cdata.length) {\n          this.state = State.InCommentLike;\n          this.currentSequence = Sequences.CdataEnd;\n          this.sequenceIndex = 0;\n          this.sectionStart = this.index + 1;\n        }\n      } else {\n        this.sequenceIndex = 0;\n        this.state = State.InDeclaration;\n        this.stateInDeclaration(c); // Reconsume the character\n      }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n  }, {\n    key: \"fastForwardTo\",\n    value: function fastForwardTo(c) {\n      while (++this.index < this.buffer.length + this.offset) {\n        if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n          return true;\n        }\n      }\n      /*\n       * We increment the index at the end of the `parse` loop,\n       * so set it to `buffer.length - 1` here.\n       *\n       * TODO: Refactor `parse` to increment index before calling states.\n       */\n      this.index = this.buffer.length + this.offset - 1;\n      return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n  }, {\n    key: \"stateInCommentLike\",\n    value: function stateInCommentLike(c) {\n      if (c === this.currentSequence[this.sequenceIndex]) {\n        if (++this.sequenceIndex === this.currentSequence.length) {\n          if (this.currentSequence === Sequences.CdataEnd) {\n            this.cbs.oncdata(this.sectionStart, this.index, 2);\n          } else {\n            this.cbs.oncomment(this.sectionStart, this.index, 2);\n          }\n          this.sequenceIndex = 0;\n          this.sectionStart = this.index + 1;\n          this.state = State.Text;\n        }\n      } else if (this.sequenceIndex === 0) {\n        // Fast-forward to the first character of the sequence\n        if (this.fastForwardTo(this.currentSequence[0])) {\n          this.sequenceIndex = 1;\n        }\n      } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n        // Allow long sequences, eg. --->, ]]]>\n        this.sequenceIndex = 0;\n      }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n  }, {\n    key: \"isTagStartChar\",\n    value: function isTagStartChar(c) {\n      return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n  }, {\n    key: \"startSpecial\",\n    value: function startSpecial(sequence, offset) {\n      this.isSpecial = true;\n      this.currentSequence = sequence;\n      this.sequenceIndex = offset;\n      this.state = State.SpecialStartSequence;\n    }\n  }, {\n    key: \"stateBeforeTagName\",\n    value: function stateBeforeTagName(c) {\n      if (c === CharCodes.ExclamationMark) {\n        this.state = State.BeforeDeclaration;\n        this.sectionStart = this.index + 1;\n      } else if (c === CharCodes.Questionmark) {\n        this.state = State.InProcessingInstruction;\n        this.sectionStart = this.index + 1;\n      } else if (this.isTagStartChar(c)) {\n        var lower = c | 0x20;\n        this.sectionStart = this.index;\n        if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {\n          this.startSpecial(Sequences.TitleEnd, 3);\n        } else {\n          this.state = !this.xmlMode && lower === Sequences.ScriptEnd[2] ? State.BeforeSpecialS : State.InTagName;\n        }\n      } else if (c === CharCodes.Slash) {\n        this.state = State.BeforeClosingTagName;\n      } else {\n        this.state = State.Text;\n        this.stateText(c);\n      }\n    }\n  }, {\n    key: \"stateInTagName\",\n    value: function stateInTagName(c) {\n      if (isEndOfTagSection(c)) {\n        this.cbs.onopentagname(this.sectionStart, this.index);\n        this.sectionStart = -1;\n        this.state = State.BeforeAttributeName;\n        this.stateBeforeAttributeName(c);\n      }\n    }\n  }, {\n    key: \"stateBeforeClosingTagName\",\n    value: function stateBeforeClosingTagName(c) {\n      if (isWhitespace(c)) {\n        // Ignore\n      } else if (c === CharCodes.Gt) {\n        this.state = State.Text;\n      } else {\n        this.state = this.isTagStartChar(c) ? State.InClosingTagName : State.InSpecialComment;\n        this.sectionStart = this.index;\n      }\n    }\n  }, {\n    key: \"stateInClosingTagName\",\n    value: function stateInClosingTagName(c) {\n      if (c === CharCodes.Gt || isWhitespace(c)) {\n        this.cbs.onclosetag(this.sectionStart, this.index);\n        this.sectionStart = -1;\n        this.state = State.AfterClosingTagName;\n        this.stateAfterClosingTagName(c);\n      }\n    }\n  }, {\n    key: \"stateAfterClosingTagName\",\n    value: function stateAfterClosingTagName(c) {\n      // Skip everything until \">\"\n      if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n        this.state = State.Text;\n        this.sectionStart = this.index + 1;\n      }\n    }\n  }, {\n    key: \"stateBeforeAttributeName\",\n    value: function stateBeforeAttributeName(c) {\n      if (c === CharCodes.Gt) {\n        this.cbs.onopentagend(this.index);\n        if (this.isSpecial) {\n          this.state = State.InSpecialTag;\n          this.sequenceIndex = 0;\n        } else {\n          this.state = State.Text;\n        }\n        this.baseState = this.state;\n        this.sectionStart = this.index + 1;\n      } else if (c === CharCodes.Slash) {\n        this.state = State.InSelfClosingTag;\n      } else if (!isWhitespace(c)) {\n        this.state = State.InAttributeName;\n        this.sectionStart = this.index;\n      }\n    }\n  }, {\n    key: \"stateInSelfClosingTag\",\n    value: function stateInSelfClosingTag(c) {\n      if (c === CharCodes.Gt) {\n        this.cbs.onselfclosingtag(this.index);\n        this.state = State.Text;\n        this.baseState = State.Text;\n        this.sectionStart = this.index + 1;\n        this.isSpecial = false; // Reset special state, in case of self-closing special tags\n      } else if (!isWhitespace(c)) {\n        this.state = State.BeforeAttributeName;\n        this.stateBeforeAttributeName(c);\n      }\n    }\n  }, {\n    key: \"stateInAttributeName\",\n    value: function stateInAttributeName(c) {\n      if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n        this.cbs.onattribname(this.sectionStart, this.index);\n        this.sectionStart = -1;\n        this.state = State.AfterAttributeName;\n        this.stateAfterAttributeName(c);\n      }\n    }\n  }, {\n    key: \"stateAfterAttributeName\",\n    value: function stateAfterAttributeName(c) {\n      if (c === CharCodes.Eq) {\n        this.state = State.BeforeAttributeValue;\n      } else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n        this.cbs.onattribend(QuoteType.NoValue, this.index);\n        this.state = State.BeforeAttributeName;\n        this.stateBeforeAttributeName(c);\n      } else if (!isWhitespace(c)) {\n        this.cbs.onattribend(QuoteType.NoValue, this.index);\n        this.state = State.InAttributeName;\n        this.sectionStart = this.index;\n      }\n    }\n  }, {\n    key: \"stateBeforeAttributeValue\",\n    value: function stateBeforeAttributeValue(c) {\n      if (c === CharCodes.DoubleQuote) {\n        this.state = State.InAttributeValueDq;\n        this.sectionStart = this.index + 1;\n      } else if (c === CharCodes.SingleQuote) {\n        this.state = State.InAttributeValueSq;\n        this.sectionStart = this.index + 1;\n      } else if (!isWhitespace(c)) {\n        this.sectionStart = this.index;\n        this.state = State.InAttributeValueNq;\n        this.stateInAttributeValueNoQuotes(c); // Reconsume token\n      }\n    }\n  }, {\n    key: \"handleInAttributeValue\",\n    value: function handleInAttributeValue(c, quote) {\n      if (c === quote || !this.decodeEntities && this.fastForwardTo(quote)) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = -1;\n        this.cbs.onattribend(quote === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single, this.index);\n        this.state = State.BeforeAttributeName;\n      } else if (this.decodeEntities && c === CharCodes.Amp) {\n        this.baseState = this.state;\n        this.state = State.BeforeEntity;\n      }\n    }\n  }, {\n    key: \"stateInAttributeValueDoubleQuotes\",\n    value: function stateInAttributeValueDoubleQuotes(c) {\n      this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n  }, {\n    key: \"stateInAttributeValueSingleQuotes\",\n    value: function stateInAttributeValueSingleQuotes(c) {\n      this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n  }, {\n    key: \"stateInAttributeValueNoQuotes\",\n    value: function stateInAttributeValueNoQuotes(c) {\n      if (isWhitespace(c) || c === CharCodes.Gt) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = -1;\n        this.cbs.onattribend(QuoteType.Unquoted, this.index);\n        this.state = State.BeforeAttributeName;\n        this.stateBeforeAttributeName(c);\n      } else if (this.decodeEntities && c === CharCodes.Amp) {\n        this.baseState = this.state;\n        this.state = State.BeforeEntity;\n      }\n    }\n  }, {\n    key: \"stateBeforeDeclaration\",\n    value: function stateBeforeDeclaration(c) {\n      if (c === CharCodes.OpeningSquareBracket) {\n        this.state = State.CDATASequence;\n        this.sequenceIndex = 0;\n      } else {\n        this.state = c === CharCodes.Dash ? State.BeforeComment : State.InDeclaration;\n      }\n    }\n  }, {\n    key: \"stateInDeclaration\",\n    value: function stateInDeclaration(c) {\n      if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n        this.cbs.ondeclaration(this.sectionStart, this.index);\n        this.state = State.Text;\n        this.sectionStart = this.index + 1;\n      }\n    }\n  }, {\n    key: \"stateInProcessingInstruction\",\n    value: function stateInProcessingInstruction(c) {\n      if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n        this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n        this.state = State.Text;\n        this.sectionStart = this.index + 1;\n      }\n    }\n  }, {\n    key: \"stateBeforeComment\",\n    value: function stateBeforeComment(c) {\n      if (c === CharCodes.Dash) {\n        this.state = State.InCommentLike;\n        this.currentSequence = Sequences.CommentEnd;\n        // Allow short comments (eg. <!-->)\n        this.sequenceIndex = 2;\n        this.sectionStart = this.index + 1;\n      } else {\n        this.state = State.InDeclaration;\n      }\n    }\n  }, {\n    key: \"stateInSpecialComment\",\n    value: function stateInSpecialComment(c) {\n      if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n        this.cbs.oncomment(this.sectionStart, this.index, 0);\n        this.state = State.Text;\n        this.sectionStart = this.index + 1;\n      }\n    }\n  }, {\n    key: \"stateBeforeSpecialS\",\n    value: function stateBeforeSpecialS(c) {\n      var lower = c | 0x20;\n      if (lower === Sequences.ScriptEnd[3]) {\n        this.startSpecial(Sequences.ScriptEnd, 4);\n      } else if (lower === Sequences.StyleEnd[3]) {\n        this.startSpecial(Sequences.StyleEnd, 4);\n      } else {\n        this.state = State.InTagName;\n        this.stateInTagName(c); // Consume the token again\n      }\n    }\n  }, {\n    key: \"stateBeforeEntity\",\n    value: function stateBeforeEntity(c) {\n      // Start excess with 1 to include the '&'\n      this.entityExcess = 1;\n      this.entityResult = 0;\n      if (c === CharCodes.Num) {\n        this.state = State.BeforeNumericEntity;\n      } else if (c === CharCodes.Amp) {\n        // We have two `&` characters in a row. Stay in the current state.\n      } else {\n        this.trieIndex = 0;\n        this.trieCurrent = this.entityTrie[0];\n        this.state = State.InNamedEntity;\n        this.stateInNamedEntity(c);\n      }\n    }\n  }, {\n    key: \"stateInNamedEntity\",\n    value: function stateInNamedEntity(c) {\n      this.entityExcess += 1;\n      this.trieIndex = determineBranch(this.entityTrie, this.trieCurrent, this.trieIndex + 1, c);\n      if (this.trieIndex < 0) {\n        this.emitNamedEntity();\n        this.index--;\n        return;\n      }\n      this.trieCurrent = this.entityTrie[this.trieIndex];\n      var masked = this.trieCurrent & BinTrieFlags.VALUE_LENGTH;\n      // If the branch is a value, store it and continue\n      if (masked) {\n        // The mask is the number of bytes of the value, including the current byte.\n        var valueLength = (masked >> 14) - 1;\n        // If we have a legacy entity while parsing strictly, just skip the number of bytes\n        if (!this.allowLegacyEntity() && c !== CharCodes.Semi) {\n          this.trieIndex += valueLength;\n        } else {\n          // Add 1 as we have already incremented the excess\n          var entityStart = this.index - this.entityExcess + 1;\n          if (entityStart > this.sectionStart) {\n            this.emitPartial(this.sectionStart, entityStart);\n          }\n          // If this is a surrogate pair, consume the next two bytes\n          this.entityResult = this.trieIndex;\n          this.trieIndex += valueLength;\n          this.entityExcess = 0;\n          this.sectionStart = this.index + 1;\n          if (valueLength === 0) {\n            this.emitNamedEntity();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"emitNamedEntity\",\n    value: function emitNamedEntity() {\n      this.state = this.baseState;\n      if (this.entityResult === 0) {\n        return;\n      }\n      var valueLength = (this.entityTrie[this.entityResult] & BinTrieFlags.VALUE_LENGTH) >> 14;\n      switch (valueLength) {\n        case 1:\n          this.emitCodePoint(this.entityTrie[this.entityResult] & ~BinTrieFlags.VALUE_LENGTH);\n          break;\n        case 2:\n          this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n          break;\n        case 3:\n          {\n            this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n            this.emitCodePoint(this.entityTrie[this.entityResult + 2]);\n          }\n      }\n    }\n  }, {\n    key: \"stateBeforeNumericEntity\",\n    value: function stateBeforeNumericEntity(c) {\n      if ((c | 0x20) === CharCodes.LowerX) {\n        this.entityExcess++;\n        this.state = State.InHexEntity;\n      } else {\n        this.state = State.InNumericEntity;\n        this.stateInNumericEntity(c);\n      }\n    }\n  }, {\n    key: \"emitNumericEntity\",\n    value: function emitNumericEntity(strict) {\n      var entityStart = this.index - this.entityExcess - 1;\n      var numberStart = entityStart + 2 + Number(this.state === State.InHexEntity);\n      if (numberStart !== this.index) {\n        // Emit leading data if any\n        if (entityStart > this.sectionStart) {\n          this.emitPartial(this.sectionStart, entityStart);\n        }\n        this.sectionStart = this.index + Number(strict);\n        this.emitCodePoint(replaceCodePoint(this.entityResult));\n      }\n      this.state = this.baseState;\n    }\n  }, {\n    key: \"stateInNumericEntity\",\n    value: function stateInNumericEntity(c) {\n      if (c === CharCodes.Semi) {\n        this.emitNumericEntity(true);\n      } else if (isNumber(c)) {\n        this.entityResult = this.entityResult * 10 + (c - CharCodes.Zero);\n        this.entityExcess++;\n      } else {\n        if (this.allowLegacyEntity()) {\n          this.emitNumericEntity(false);\n        } else {\n          this.state = this.baseState;\n        }\n        this.index--;\n      }\n    }\n  }, {\n    key: \"stateInHexEntity\",\n    value: function stateInHexEntity(c) {\n      if (c === CharCodes.Semi) {\n        this.emitNumericEntity(true);\n      } else if (isNumber(c)) {\n        this.entityResult = this.entityResult * 16 + (c - CharCodes.Zero);\n        this.entityExcess++;\n      } else if (isHexDigit(c)) {\n        this.entityResult = this.entityResult * 16 + ((c | 0x20) - CharCodes.LowerA + 10);\n        this.entityExcess++;\n      } else {\n        if (this.allowLegacyEntity()) {\n          this.emitNumericEntity(false);\n        } else {\n          this.state = this.baseState;\n        }\n        this.index--;\n      }\n    }\n  }, {\n    key: \"allowLegacyEntity\",\n    value: function allowLegacyEntity() {\n      return !this.xmlMode && (this.baseState === State.Text || this.baseState === State.InSpecialTag);\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      // If we are inside of text or attributes, emit what we already have.\n      if (this.running && this.sectionStart !== this.index) {\n        if (this.state === State.Text || this.state === State.InSpecialTag && this.sequenceIndex === 0) {\n          this.cbs.ontext(this.sectionStart, this.index);\n          this.sectionStart = this.index;\n        } else if (this.state === State.InAttributeValueDq || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueNq) {\n          this.cbs.onattribdata(this.sectionStart, this.index);\n          this.sectionStart = this.index;\n        }\n      }\n    }\n  }, {\n    key: \"shouldContinue\",\n    value: function shouldContinue() {\n      return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      while (this.shouldContinue()) {\n        var c = this.buffer.charCodeAt(this.index - this.offset);\n        if (this.state === State.Text) {\n          this.stateText(c);\n        } else if (this.state === State.SpecialStartSequence) {\n          this.stateSpecialStartSequence(c);\n        } else if (this.state === State.InSpecialTag) {\n          this.stateInSpecialTag(c);\n        } else if (this.state === State.CDATASequence) {\n          this.stateCDATASequence(c);\n        } else if (this.state === State.InAttributeValueDq) {\n          this.stateInAttributeValueDoubleQuotes(c);\n        } else if (this.state === State.InAttributeName) {\n          this.stateInAttributeName(c);\n        } else if (this.state === State.InCommentLike) {\n          this.stateInCommentLike(c);\n        } else if (this.state === State.InSpecialComment) {\n          this.stateInSpecialComment(c);\n        } else if (this.state === State.BeforeAttributeName) {\n          this.stateBeforeAttributeName(c);\n        } else if (this.state === State.InTagName) {\n          this.stateInTagName(c);\n        } else if (this.state === State.InClosingTagName) {\n          this.stateInClosingTagName(c);\n        } else if (this.state === State.BeforeTagName) {\n          this.stateBeforeTagName(c);\n        } else if (this.state === State.AfterAttributeName) {\n          this.stateAfterAttributeName(c);\n        } else if (this.state === State.InAttributeValueSq) {\n          this.stateInAttributeValueSingleQuotes(c);\n        } else if (this.state === State.BeforeAttributeValue) {\n          this.stateBeforeAttributeValue(c);\n        } else if (this.state === State.BeforeClosingTagName) {\n          this.stateBeforeClosingTagName(c);\n        } else if (this.state === State.AfterClosingTagName) {\n          this.stateAfterClosingTagName(c);\n        } else if (this.state === State.BeforeSpecialS) {\n          this.stateBeforeSpecialS(c);\n        } else if (this.state === State.InAttributeValueNq) {\n          this.stateInAttributeValueNoQuotes(c);\n        } else if (this.state === State.InSelfClosingTag) {\n          this.stateInSelfClosingTag(c);\n        } else if (this.state === State.InDeclaration) {\n          this.stateInDeclaration(c);\n        } else if (this.state === State.BeforeDeclaration) {\n          this.stateBeforeDeclaration(c);\n        } else if (this.state === State.BeforeComment) {\n          this.stateBeforeComment(c);\n        } else if (this.state === State.InProcessingInstruction) {\n          this.stateInProcessingInstruction(c);\n        } else if (this.state === State.InNamedEntity) {\n          this.stateInNamedEntity(c);\n        } else if (this.state === State.BeforeEntity) {\n          this.stateBeforeEntity(c);\n        } else if (this.state === State.InHexEntity) {\n          this.stateInHexEntity(c);\n        } else if (this.state === State.InNumericEntity) {\n          this.stateInNumericEntity(c);\n        } else {\n          // `this._state === State.BeforeNumericEntity`\n          this.stateBeforeNumericEntity(c);\n        }\n        this.index++;\n      }\n      this.cleanup();\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      if (this.state === State.InNamedEntity) {\n        this.emitNamedEntity();\n      }\n      // If there is remaining data, emit it in a reasonable way\n      if (this.sectionStart < this.index) {\n        this.handleTrailingData();\n      }\n      this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n  }, {\n    key: \"handleTrailingData\",\n    value: function handleTrailingData() {\n      var endIndex = this.buffer.length + this.offset;\n      if (this.state === State.InCommentLike) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, endIndex, 0);\n        } else {\n          this.cbs.oncomment(this.sectionStart, endIndex, 0);\n        }\n      } else if (this.state === State.InNumericEntity && this.allowLegacyEntity()) {\n        this.emitNumericEntity(false);\n        // All trailing data will have been consumed\n      } else if (this.state === State.InHexEntity && this.allowLegacyEntity()) {\n        this.emitNumericEntity(false);\n        // All trailing data will have been consumed\n      } else if (this.state === State.InTagName || this.state === State.BeforeAttributeName || this.state === State.BeforeAttributeValue || this.state === State.AfterAttributeName || this.state === State.InAttributeName || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueDq || this.state === State.InAttributeValueNq || this.state === State.InClosingTagName) {\n        /*\n         * If we are currently in an opening or closing tag, us not calling the\n         * respective callback signals that the tag should be ignored.\n         */\n      } else {\n        this.cbs.ontext(this.sectionStart, endIndex);\n      }\n    }\n  }, {\n    key: \"emitPartial\",\n    value: function emitPartial(start, endIndex) {\n      if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {\n        this.cbs.onattribdata(start, endIndex);\n      } else {\n        this.cbs.ontext(start, endIndex);\n      }\n    }\n  }, {\n    key: \"emitCodePoint\",\n    value: function emitCodePoint(cp) {\n      if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {\n        this.cbs.onattribentity(cp);\n      } else {\n        this.cbs.ontextentity(cp);\n      }\n    }\n  }]);\n  return Tokenizer;\n}();\nexport { Tokenizer as default };","map":{"version":3,"mappings":"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","names":["htmlDecodeTree","xmlDecodeTree","BinTrieFlags","determineBranch","replaceCodePoint","CharCodes","State","isWhitespace","c","Space","NewLine","Tab","FormFeed","CarriageReturn","isEndOfTagSection","Slash","Gt","isNumber","Zero","Nine","isASCIIAlpha","LowerA","LowerZ","UpperA","UpperZ","isHexDigit","UpperF","LowerF","QuoteType","Sequences","Cdata","Uint8Array","CdataEnd","CommentEnd","ScriptEnd","StyleEnd","TitleEnd","Tokenizer","cbs","xmlMode","decodeEntities","Text","entityTrie","state","buffer","sectionStart","index","baseState","currentSequence","undefined","running","offset","chunk","length","parse","finish","Lt","fastForwardTo","ontext","BeforeTagName","Amp","BeforeEntity","isEnd","sequenceIndex","isMatch","isSpecial","InTagName","stateInTagName","endOfText","actualIndex","stateInClosingTagName","Number","InCommentLike","InDeclaration","stateInDeclaration","charCodeAt","oncdata","oncomment","sequence","SpecialStartSequence","ExclamationMark","BeforeDeclaration","Questionmark","InProcessingInstruction","isTagStartChar","lower","startSpecial","BeforeSpecialS","BeforeClosingTagName","stateText","onopentagname","BeforeAttributeName","stateBeforeAttributeName","InClosingTagName","InSpecialComment","onclosetag","AfterClosingTagName","stateAfterClosingTagName","onopentagend","InSpecialTag","InSelfClosingTag","InAttributeName","onselfclosingtag","Eq","onattribname","AfterAttributeName","stateAfterAttributeName","BeforeAttributeValue","onattribend","NoValue","DoubleQuote","InAttributeValueDq","SingleQuote","InAttributeValueSq","InAttributeValueNq","stateInAttributeValueNoQuotes","quote","onattribdata","Double","Single","handleInAttributeValue","Unquoted","OpeningSquareBracket","CDATASequence","Dash","BeforeComment","ondeclaration","onprocessinginstruction","entityExcess","entityResult","Num","BeforeNumericEntity","trieIndex","trieCurrent","InNamedEntity","stateInNamedEntity","emitNamedEntity","masked","VALUE_LENGTH","valueLength","allowLegacyEntity","Semi","entityStart","emitPartial","emitCodePoint","LowerX","InHexEntity","InNumericEntity","stateInNumericEntity","strict","numberStart","emitNumericEntity","shouldContinue","stateSpecialStartSequence","stateInSpecialTag","stateCDATASequence","stateInAttributeValueDoubleQuotes","stateInAttributeName","stateInCommentLike","stateInSpecialComment","stateBeforeTagName","stateInAttributeValueSingleQuotes","stateBeforeAttributeValue","stateBeforeClosingTagName","stateBeforeSpecialS","stateInSelfClosingTag","stateBeforeDeclaration","stateBeforeComment","stateInProcessingInstruction","stateBeforeEntity","stateInHexEntity","stateBeforeNumericEntity","cleanup","handleTrailingData","onend","endIndex","start","cp","onattribentity","ontextentity"],"sources":["Tokenizer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}