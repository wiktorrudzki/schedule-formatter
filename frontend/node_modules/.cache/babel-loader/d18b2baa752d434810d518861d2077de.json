{"ast":null,"code":"import _objectSpread from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID } from '../common/html.js';\nimport { TokenType, getTokenAttr } from '../common/token.js';\n//Misc constants\nvar HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nvar AA_OUTER_LOOP_ITER = 8;\nvar AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n  InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n  InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n  InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n  InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n  InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n  InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n  InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n  InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n  InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n  InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n  InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n  InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n  InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n  InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n  InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n  InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nvar BASE_LOC = {\n  startLine: -1,\n  startCol: -1,\n  startOffset: -1,\n  endLine: -1,\n  endCol: -1,\n  endOffset: -1\n};\nvar TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nvar defaultParserOptions = {\n  scriptingEnabled: true,\n  sourceCodeLocationInfo: false,\n  treeAdapter: defaultTreeAdapter,\n  onParseError: null\n};\n//Parser\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(options, document) {\n    var fragmentContext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var scriptHandler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    _classCallCheck(this, Parser);\n    this.fragmentContext = fragmentContext;\n    this.scriptHandler = scriptHandler;\n    this.currentToken = null;\n    this.stopped = false;\n    this.insertionMode = InsertionMode.INITIAL;\n    this.originalInsertionMode = InsertionMode.INITIAL;\n    this.headElement = null;\n    this.formElement = null;\n    /** Indicates that the current node is not an element in the HTML namespace */\n    this.currentNotInHTML = false;\n    /**\n     * The template insertion mode stack is maintained from the left.\n     * Ie. the topmost element will always have index 0.\n     */\n    this.tmplInsertionModeStack = [];\n    this.pendingCharacterTokens = [];\n    this.hasNonWhitespacePendingCharacterToken = false;\n    this.framesetOk = true;\n    this.skipNextNewLine = false;\n    this.fosterParentingEnabled = false;\n    this.options = _objectSpread(_objectSpread({}, defaultParserOptions), options);\n    this.treeAdapter = this.options.treeAdapter;\n    this.onParseError = this.options.onParseError;\n    // Always enable location info if we report parse errors.\n    if (this.onParseError) {\n      this.options.sourceCodeLocationInfo = true;\n    }\n    this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n    this.tokenizer = new Tokenizer(this.options, this);\n    this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n    this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n    this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n    this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n  }\n  // API\n  _createClass(Parser, [{\n    key: \"getFragment\",\n    value: function getFragment() {\n      var rootElement = this.treeAdapter.getFirstChild(this.document);\n      var fragment = this.treeAdapter.createDocumentFragment();\n      this._adoptNodes(rootElement, fragment);\n      return fragment;\n    }\n    //Errors\n  }, {\n    key: \"_err\",\n    value: function _err(token, code, beforeToken) {\n      var _a;\n      if (!this.onParseError) return;\n      var loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n      var err = {\n        code: code,\n        startLine: loc.startLine,\n        startCol: loc.startCol,\n        startOffset: loc.startOffset,\n        endLine: beforeToken ? loc.startLine : loc.endLine,\n        endCol: beforeToken ? loc.startCol : loc.endCol,\n        endOffset: beforeToken ? loc.startOffset : loc.endOffset\n      };\n      this.onParseError(err);\n    }\n    //Stack events\n  }, {\n    key: \"onItemPush\",\n    value: function onItemPush(node, tid, isTop) {\n      var _a, _b;\n      (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n      if (isTop && this.openElements.stackTop > 0) this._setContextModes(node, tid);\n    }\n  }, {\n    key: \"onItemPop\",\n    value: function onItemPop(node, isTop) {\n      var _a, _b;\n      if (this.options.sourceCodeLocationInfo) {\n        this._setEndLocation(node, this.currentToken);\n      }\n      (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n      if (isTop) {\n        var current;\n        var currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n          current = this.fragmentContext;\n          currentTagId = this.fragmentContextID;\n        } else {\n          var _this$openElements = this.openElements;\n          current = _this$openElements.current;\n          currentTagId = _this$openElements.currentTagId;\n        }\n        this._setContextModes(current, currentTagId);\n      }\n    }\n  }, {\n    key: \"_setContextModes\",\n    value: function _setContextModes(current, tid) {\n      var isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n      this.currentNotInHTML = !isHTML;\n      this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n  }, {\n    key: \"_switchToTextParsing\",\n    value: function _switchToTextParsing(currentToken, nextTokenizerState) {\n      this._insertElement(currentToken, NS.HTML);\n      this.tokenizer.state = nextTokenizerState;\n      this.originalInsertionMode = this.insertionMode;\n      this.insertionMode = InsertionMode.TEXT;\n    }\n  }, {\n    key: \"switchToPlaintextParsing\",\n    value: function switchToPlaintextParsing() {\n      this.insertionMode = InsertionMode.TEXT;\n      this.originalInsertionMode = InsertionMode.IN_BODY;\n      this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n  }, {\n    key: \"_getAdjustedCurrentElement\",\n    value: function _getAdjustedCurrentElement() {\n      return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n    }\n  }, {\n    key: \"_findFormInFragmentContext\",\n    value: function _findFormInFragmentContext() {\n      var node = this.fragmentContext;\n      while (node) {\n        if (this.treeAdapter.getTagName(node) === TN.FORM) {\n          this.formElement = node;\n          break;\n        }\n        node = this.treeAdapter.getParentNode(node);\n      }\n    }\n  }, {\n    key: \"_initTokenizerForFragmentParsing\",\n    value: function _initTokenizerForFragmentParsing() {\n      if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n        return;\n      }\n      switch (this.fragmentContextID) {\n        case $.TITLE:\n        case $.TEXTAREA:\n          {\n            this.tokenizer.state = TokenizerMode.RCDATA;\n            break;\n          }\n        case $.STYLE:\n        case $.XMP:\n        case $.IFRAME:\n        case $.NOEMBED:\n        case $.NOFRAMES:\n        case $.NOSCRIPT:\n          {\n            this.tokenizer.state = TokenizerMode.RAWTEXT;\n            break;\n          }\n        case $.SCRIPT:\n          {\n            this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n            break;\n          }\n        case $.PLAINTEXT:\n          {\n            this.tokenizer.state = TokenizerMode.PLAINTEXT;\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n    //Tree mutation\n  }, {\n    key: \"_setDocumentType\",\n    value: function _setDocumentType(token) {\n      var _this = this;\n      var name = token.name || '';\n      var publicId = token.publicId || '';\n      var systemId = token.systemId || '';\n      this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n      if (token.location) {\n        var documentChildren = this.treeAdapter.getChildNodes(this.document);\n        var docTypeNode = documentChildren.find(function (node) {\n          return _this.treeAdapter.isDocumentTypeNode(node);\n        });\n        if (docTypeNode) {\n          this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n        }\n      }\n    }\n  }, {\n    key: \"_attachElementToTree\",\n    value: function _attachElementToTree(element, location) {\n      if (this.options.sourceCodeLocationInfo) {\n        var loc = location && _objectSpread(_objectSpread({}, location), {}, {\n          startTag: location\n        });\n        this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n      }\n      if (this._shouldFosterParentOnInsertion()) {\n        this._fosterParentElement(element);\n      } else {\n        var parent = this.openElements.currentTmplContentOrNode;\n        this.treeAdapter.appendChild(parent, element);\n      }\n    }\n  }, {\n    key: \"_appendElement\",\n    value: function _appendElement(token, namespaceURI) {\n      var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n      this._attachElementToTree(element, token.location);\n    }\n  }, {\n    key: \"_insertElement\",\n    value: function _insertElement(token, namespaceURI) {\n      var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n      this._attachElementToTree(element, token.location);\n      this.openElements.push(element, token.tagID);\n    }\n  }, {\n    key: \"_insertFakeElement\",\n    value: function _insertFakeElement(tagName, tagID) {\n      var element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n      this._attachElementToTree(element, null);\n      this.openElements.push(element, tagID);\n    }\n  }, {\n    key: \"_insertTemplate\",\n    value: function _insertTemplate(token) {\n      var tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n      var content = this.treeAdapter.createDocumentFragment();\n      this.treeAdapter.setTemplateContent(tmpl, content);\n      this._attachElementToTree(tmpl, token.location);\n      this.openElements.push(tmpl, token.tagID);\n      if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n  }, {\n    key: \"_insertFakeRootElement\",\n    value: function _insertFakeRootElement() {\n      var element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n      if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(element, null);\n      this.treeAdapter.appendChild(this.openElements.current, element);\n      this.openElements.push(element, $.HTML);\n    }\n  }, {\n    key: \"_appendCommentNode\",\n    value: function _appendCommentNode(token, parent) {\n      var commentNode = this.treeAdapter.createCommentNode(token.data);\n      this.treeAdapter.appendChild(parent, commentNode);\n      if (this.options.sourceCodeLocationInfo) {\n        this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n      }\n    }\n  }, {\n    key: \"_insertCharacters\",\n    value: function _insertCharacters(token) {\n      var parent;\n      var beforeElement;\n      if (this._shouldFosterParentOnInsertion()) {\n        var _this$_findFosterPare = this._findFosterParentingLocation();\n        parent = _this$_findFosterPare.parent;\n        beforeElement = _this$_findFosterPare.beforeElement;\n        if (beforeElement) {\n          this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n        } else {\n          this.treeAdapter.insertText(parent, token.chars);\n        }\n      } else {\n        parent = this.openElements.currentTmplContentOrNode;\n        this.treeAdapter.insertText(parent, token.chars);\n      }\n      if (!token.location) return;\n      var siblings = this.treeAdapter.getChildNodes(parent);\n      var textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n      var textNode = siblings[textNodeIdx - 1];\n      //NOTE: if we have a location assigned by another token, then just update the end position\n      var tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n      if (tnLoc) {\n        var _token$location = token.location,\n          endLine = _token$location.endLine,\n          endCol = _token$location.endCol,\n          endOffset = _token$location.endOffset;\n        this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n          endLine: endLine,\n          endCol: endCol,\n          endOffset: endOffset\n        });\n      } else if (this.options.sourceCodeLocationInfo) {\n        this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n      }\n    }\n  }, {\n    key: \"_adoptNodes\",\n    value: function _adoptNodes(donor, recipient) {\n      for (var child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n        this.treeAdapter.detachNode(child);\n        this.treeAdapter.appendChild(recipient, child);\n      }\n    }\n  }, {\n    key: \"_setEndLocation\",\n    value: function _setEndLocation(element, closingToken) {\n      if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n        var ctLoc = closingToken.location;\n        var tn = this.treeAdapter.getTagName(element);\n        var endLoc =\n        // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n        // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n        closingToken.type === TokenType.END_TAG && tn === closingToken.tagName ? {\n          endTag: _objectSpread({}, ctLoc),\n          endLine: ctLoc.endLine,\n          endCol: ctLoc.endCol,\n          endOffset: ctLoc.endOffset\n        } : {\n          endLine: ctLoc.startLine,\n          endCol: ctLoc.startCol,\n          endOffset: ctLoc.startOffset\n        };\n        this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n      }\n    }\n    //Token processing\n  }, {\n    key: \"shouldProcessStartTagTokenInForeignContent\",\n    value: function shouldProcessStartTagTokenInForeignContent(token) {\n      // Check that neither current === document, or ns === NS.HTML\n      if (!this.currentNotInHTML) return false;\n      var current;\n      var currentTagId;\n      if (this.openElements.stackTop === 0 && this.fragmentContext) {\n        current = this.fragmentContext;\n        currentTagId = this.fragmentContextID;\n      } else {\n        var _this$openElements2 = this.openElements;\n        current = _this$openElements2.current;\n        currentTagId = _this$openElements2.currentTagId;\n      }\n      if (token.tagID === $.SVG && this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n        return false;\n      }\n      return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n        // If it _is_ an integration point, then we might have to check that it is not an HTML\n        // integration point.\n        (token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, NS.HTML)\n      );\n    }\n  }, {\n    key: \"_processToken\",\n    value: function _processToken(token) {\n      switch (token.type) {\n        case TokenType.CHARACTER:\n          {\n            this.onCharacter(token);\n            break;\n          }\n        case TokenType.NULL_CHARACTER:\n          {\n            this.onNullCharacter(token);\n            break;\n          }\n        case TokenType.COMMENT:\n          {\n            this.onComment(token);\n            break;\n          }\n        case TokenType.DOCTYPE:\n          {\n            this.onDoctype(token);\n            break;\n          }\n        case TokenType.START_TAG:\n          {\n            this._processStartTag(token);\n            break;\n          }\n        case TokenType.END_TAG:\n          {\n            this.onEndTag(token);\n            break;\n          }\n        case TokenType.EOF:\n          {\n            this.onEof(token);\n            break;\n          }\n        case TokenType.WHITESPACE_CHARACTER:\n          {\n            this.onWhitespaceCharacter(token);\n            break;\n          }\n      }\n    }\n    //Integration points\n  }, {\n    key: \"_isIntegrationPoint\",\n    value: function _isIntegrationPoint(tid, element, foreignNS) {\n      var ns = this.treeAdapter.getNamespaceURI(element);\n      var attrs = this.treeAdapter.getAttrList(element);\n      return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n  }, {\n    key: \"_reconstructActiveFormattingElements\",\n    value: function _reconstructActiveFormattingElements() {\n      var _this2 = this;\n      var listLength = this.activeFormattingElements.entries.length;\n      if (listLength) {\n        var endIndex = this.activeFormattingElements.entries.findIndex(function (entry) {\n          return entry.type === EntryType.Marker || _this2.openElements.contains(entry.element);\n        });\n        var unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n        for (var i = unopenIdx; i >= 0; i--) {\n          var entry = this.activeFormattingElements.entries[i];\n          this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n          entry.element = this.openElements.current;\n        }\n      }\n    }\n    //Close elements\n  }, {\n    key: \"_closeTableCell\",\n    value: function _closeTableCell() {\n      this.openElements.generateImpliedEndTags();\n      this.openElements.popUntilTableCellPopped();\n      this.activeFormattingElements.clearToLastMarker();\n      this.insertionMode = InsertionMode.IN_ROW;\n    }\n  }, {\n    key: \"_closePElement\",\n    value: function _closePElement() {\n      this.openElements.generateImpliedEndTagsWithExclusion($.P);\n      this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n  }, {\n    key: \"_resetInsertionMode\",\n    value: function _resetInsertionMode() {\n      for (var i = this.openElements.stackTop; i >= 0; i--) {\n        //Insertion mode reset map\n        switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n          case $.TR:\n            this.insertionMode = InsertionMode.IN_ROW;\n            return;\n          case $.TBODY:\n          case $.THEAD:\n          case $.TFOOT:\n            this.insertionMode = InsertionMode.IN_TABLE_BODY;\n            return;\n          case $.CAPTION:\n            this.insertionMode = InsertionMode.IN_CAPTION;\n            return;\n          case $.COLGROUP:\n            this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            return;\n          case $.TABLE:\n            this.insertionMode = InsertionMode.IN_TABLE;\n            return;\n          case $.BODY:\n            this.insertionMode = InsertionMode.IN_BODY;\n            return;\n          case $.FRAMESET:\n            this.insertionMode = InsertionMode.IN_FRAMESET;\n            return;\n          case $.SELECT:\n            this._resetInsertionModeForSelect(i);\n            return;\n          case $.TEMPLATE:\n            this.insertionMode = this.tmplInsertionModeStack[0];\n            return;\n          case $.HTML:\n            this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n            return;\n          case $.TD:\n          case $.TH:\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_CELL;\n              return;\n            }\n            break;\n          case $.HEAD:\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_HEAD;\n              return;\n            }\n            break;\n        }\n      }\n      this.insertionMode = InsertionMode.IN_BODY;\n    }\n  }, {\n    key: \"_resetInsertionModeForSelect\",\n    value: function _resetInsertionModeForSelect(selectIdx) {\n      if (selectIdx > 0) {\n        for (var i = selectIdx - 1; i > 0; i--) {\n          var tn = this.openElements.tagIDs[i];\n          if (tn === $.TEMPLATE) {\n            break;\n          } else if (tn === $.TABLE) {\n            this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n            return;\n          }\n        }\n      }\n      this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n  }, {\n    key: \"_isElementCausesFosterParenting\",\n    value: function _isElementCausesFosterParenting(tn) {\n      return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n  }, {\n    key: \"_shouldFosterParentOnInsertion\",\n    value: function _shouldFosterParentOnInsertion() {\n      return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n  }, {\n    key: \"_findFosterParentingLocation\",\n    value: function _findFosterParentingLocation() {\n      for (var i = this.openElements.stackTop; i >= 0; i--) {\n        var openElement = this.openElements.items[i];\n        switch (this.openElements.tagIDs[i]) {\n          case $.TEMPLATE:\n            if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n              return {\n                parent: this.treeAdapter.getTemplateContent(openElement),\n                beforeElement: null\n              };\n            }\n            break;\n          case $.TABLE:\n            {\n              var parent = this.treeAdapter.getParentNode(openElement);\n              if (parent) {\n                return {\n                  parent: parent,\n                  beforeElement: openElement\n                };\n              }\n              return {\n                parent: this.openElements.items[i - 1],\n                beforeElement: null\n              };\n            }\n          default:\n          // Do nothing\n        }\n      }\n\n      return {\n        parent: this.openElements.items[0],\n        beforeElement: null\n      };\n    }\n  }, {\n    key: \"_fosterParentElement\",\n    value: function _fosterParentElement(element) {\n      var location = this._findFosterParentingLocation();\n      if (location.beforeElement) {\n        this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n      } else {\n        this.treeAdapter.appendChild(location.parent, element);\n      }\n    }\n    //Special elements\n  }, {\n    key: \"_isSpecialElement\",\n    value: function _isSpecialElement(element, id) {\n      var ns = this.treeAdapter.getNamespaceURI(element);\n      return SPECIAL_ELEMENTS[ns].has(id);\n    }\n  }, {\n    key: \"onCharacter\",\n    value: function onCharacter(token) {\n      this.skipNextNewLine = false;\n      if (this.tokenizer.inForeignNode) {\n        characterInForeignContent(this, token);\n        return;\n      }\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          tokenInInitialMode(this, token);\n          break;\n        case InsertionMode.BEFORE_HTML:\n          tokenBeforeHtml(this, token);\n          break;\n        case InsertionMode.BEFORE_HEAD:\n          tokenBeforeHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD:\n          tokenInHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          tokenInHeadNoScript(this, token);\n          break;\n        case InsertionMode.AFTER_HEAD:\n          tokenAfterHead(this, token);\n          break;\n        case InsertionMode.IN_BODY:\n        case InsertionMode.IN_CAPTION:\n        case InsertionMode.IN_CELL:\n        case InsertionMode.IN_TEMPLATE:\n          characterInBody(this, token);\n          break;\n        case InsertionMode.TEXT:\n        case InsertionMode.IN_SELECT:\n        case InsertionMode.IN_SELECT_IN_TABLE:\n          this._insertCharacters(token);\n          break;\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n          characterInTable(this, token);\n          break;\n        case InsertionMode.IN_TABLE_TEXT:\n          characterInTableText(this, token);\n          break;\n        case InsertionMode.IN_COLUMN_GROUP:\n          tokenInColumnGroup(this, token);\n          break;\n        case InsertionMode.AFTER_BODY:\n          tokenAfterBody(this, token);\n          break;\n        case InsertionMode.AFTER_AFTER_BODY:\n          tokenAfterAfterBody(this, token);\n          break;\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onNullCharacter\",\n    value: function onNullCharacter(token) {\n      this.skipNextNewLine = false;\n      if (this.tokenizer.inForeignNode) {\n        nullCharacterInForeignContent(this, token);\n        return;\n      }\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          tokenInInitialMode(this, token);\n          break;\n        case InsertionMode.BEFORE_HTML:\n          tokenBeforeHtml(this, token);\n          break;\n        case InsertionMode.BEFORE_HEAD:\n          tokenBeforeHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD:\n          tokenInHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          tokenInHeadNoScript(this, token);\n          break;\n        case InsertionMode.AFTER_HEAD:\n          tokenAfterHead(this, token);\n          break;\n        case InsertionMode.TEXT:\n          this._insertCharacters(token);\n          break;\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n          characterInTable(this, token);\n          break;\n        case InsertionMode.IN_COLUMN_GROUP:\n          tokenInColumnGroup(this, token);\n          break;\n        case InsertionMode.AFTER_BODY:\n          tokenAfterBody(this, token);\n          break;\n        case InsertionMode.AFTER_AFTER_BODY:\n          tokenAfterAfterBody(this, token);\n          break;\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onComment\",\n    value: function onComment(token) {\n      this.skipNextNewLine = false;\n      if (this.currentNotInHTML) {\n        appendComment(this, token);\n        return;\n      }\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n        case InsertionMode.BEFORE_HTML:\n        case InsertionMode.BEFORE_HEAD:\n        case InsertionMode.IN_HEAD:\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n        case InsertionMode.AFTER_HEAD:\n        case InsertionMode.IN_BODY:\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_CAPTION:\n        case InsertionMode.IN_COLUMN_GROUP:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n        case InsertionMode.IN_CELL:\n        case InsertionMode.IN_SELECT:\n        case InsertionMode.IN_SELECT_IN_TABLE:\n        case InsertionMode.IN_TEMPLATE:\n        case InsertionMode.IN_FRAMESET:\n        case InsertionMode.AFTER_FRAMESET:\n          appendComment(this, token);\n          break;\n        case InsertionMode.IN_TABLE_TEXT:\n          tokenInTableText(this, token);\n          break;\n        case InsertionMode.AFTER_BODY:\n          appendCommentToRootHtmlElement(this, token);\n          break;\n        case InsertionMode.AFTER_AFTER_BODY:\n        case InsertionMode.AFTER_AFTER_FRAMESET:\n          appendCommentToDocument(this, token);\n          break;\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onDoctype\",\n    value: function onDoctype(token) {\n      this.skipNextNewLine = false;\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          doctypeInInitialMode(this, token);\n          break;\n        case InsertionMode.BEFORE_HEAD:\n        case InsertionMode.IN_HEAD:\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n        case InsertionMode.AFTER_HEAD:\n          this._err(token, ERR.misplacedDoctype);\n          break;\n        case InsertionMode.IN_TABLE_TEXT:\n          tokenInTableText(this, token);\n          break;\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onStartTag\",\n    value: function onStartTag(token) {\n      this.skipNextNewLine = false;\n      this.currentToken = token;\n      this._processStartTag(token);\n      if (token.selfClosing && !token.ackSelfClosing) {\n        this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n      }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n  }, {\n    key: \"_processStartTag\",\n    value: function _processStartTag(token) {\n      if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n        startTagInForeignContent(this, token);\n      } else {\n        this._startTagOutsideForeignContent(token);\n      }\n    }\n  }, {\n    key: \"_startTagOutsideForeignContent\",\n    value: function _startTagOutsideForeignContent(token) {\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          tokenInInitialMode(this, token);\n          break;\n        case InsertionMode.BEFORE_HTML:\n          startTagBeforeHtml(this, token);\n          break;\n        case InsertionMode.BEFORE_HEAD:\n          startTagBeforeHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD:\n          startTagInHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          startTagInHeadNoScript(this, token);\n          break;\n        case InsertionMode.AFTER_HEAD:\n          startTagAfterHead(this, token);\n          break;\n        case InsertionMode.IN_BODY:\n          startTagInBody(this, token);\n          break;\n        case InsertionMode.IN_TABLE:\n          startTagInTable(this, token);\n          break;\n        case InsertionMode.IN_TABLE_TEXT:\n          tokenInTableText(this, token);\n          break;\n        case InsertionMode.IN_CAPTION:\n          startTagInCaption(this, token);\n          break;\n        case InsertionMode.IN_COLUMN_GROUP:\n          startTagInColumnGroup(this, token);\n          break;\n        case InsertionMode.IN_TABLE_BODY:\n          startTagInTableBody(this, token);\n          break;\n        case InsertionMode.IN_ROW:\n          startTagInRow(this, token);\n          break;\n        case InsertionMode.IN_CELL:\n          startTagInCell(this, token);\n          break;\n        case InsertionMode.IN_SELECT:\n          startTagInSelect(this, token);\n          break;\n        case InsertionMode.IN_SELECT_IN_TABLE:\n          startTagInSelectInTable(this, token);\n          break;\n        case InsertionMode.IN_TEMPLATE:\n          startTagInTemplate(this, token);\n          break;\n        case InsertionMode.AFTER_BODY:\n          startTagAfterBody(this, token);\n          break;\n        case InsertionMode.IN_FRAMESET:\n          startTagInFrameset(this, token);\n          break;\n        case InsertionMode.AFTER_FRAMESET:\n          startTagAfterFrameset(this, token);\n          break;\n        case InsertionMode.AFTER_AFTER_BODY:\n          startTagAfterAfterBody(this, token);\n          break;\n        case InsertionMode.AFTER_AFTER_FRAMESET:\n          startTagAfterAfterFrameset(this, token);\n          break;\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onEndTag\",\n    value: function onEndTag(token) {\n      this.skipNextNewLine = false;\n      this.currentToken = token;\n      if (this.currentNotInHTML) {\n        endTagInForeignContent(this, token);\n      } else {\n        this._endTagOutsideForeignContent(token);\n      }\n    }\n  }, {\n    key: \"_endTagOutsideForeignContent\",\n    value: function _endTagOutsideForeignContent(token) {\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          tokenInInitialMode(this, token);\n          break;\n        case InsertionMode.BEFORE_HTML:\n          endTagBeforeHtml(this, token);\n          break;\n        case InsertionMode.BEFORE_HEAD:\n          endTagBeforeHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD:\n          endTagInHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          endTagInHeadNoScript(this, token);\n          break;\n        case InsertionMode.AFTER_HEAD:\n          endTagAfterHead(this, token);\n          break;\n        case InsertionMode.IN_BODY:\n          endTagInBody(this, token);\n          break;\n        case InsertionMode.TEXT:\n          endTagInText(this, token);\n          break;\n        case InsertionMode.IN_TABLE:\n          endTagInTable(this, token);\n          break;\n        case InsertionMode.IN_TABLE_TEXT:\n          tokenInTableText(this, token);\n          break;\n        case InsertionMode.IN_CAPTION:\n          endTagInCaption(this, token);\n          break;\n        case InsertionMode.IN_COLUMN_GROUP:\n          endTagInColumnGroup(this, token);\n          break;\n        case InsertionMode.IN_TABLE_BODY:\n          endTagInTableBody(this, token);\n          break;\n        case InsertionMode.IN_ROW:\n          endTagInRow(this, token);\n          break;\n        case InsertionMode.IN_CELL:\n          endTagInCell(this, token);\n          break;\n        case InsertionMode.IN_SELECT:\n          endTagInSelect(this, token);\n          break;\n        case InsertionMode.IN_SELECT_IN_TABLE:\n          endTagInSelectInTable(this, token);\n          break;\n        case InsertionMode.IN_TEMPLATE:\n          endTagInTemplate(this, token);\n          break;\n        case InsertionMode.AFTER_BODY:\n          endTagAfterBody(this, token);\n          break;\n        case InsertionMode.IN_FRAMESET:\n          endTagInFrameset(this, token);\n          break;\n        case InsertionMode.AFTER_FRAMESET:\n          endTagAfterFrameset(this, token);\n          break;\n        case InsertionMode.AFTER_AFTER_BODY:\n          tokenAfterAfterBody(this, token);\n          break;\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onEof\",\n    value: function onEof(token) {\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          tokenInInitialMode(this, token);\n          break;\n        case InsertionMode.BEFORE_HTML:\n          tokenBeforeHtml(this, token);\n          break;\n        case InsertionMode.BEFORE_HEAD:\n          tokenBeforeHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD:\n          tokenInHead(this, token);\n          break;\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          tokenInHeadNoScript(this, token);\n          break;\n        case InsertionMode.AFTER_HEAD:\n          tokenAfterHead(this, token);\n          break;\n        case InsertionMode.IN_BODY:\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_CAPTION:\n        case InsertionMode.IN_COLUMN_GROUP:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n        case InsertionMode.IN_CELL:\n        case InsertionMode.IN_SELECT:\n        case InsertionMode.IN_SELECT_IN_TABLE:\n          eofInBody(this, token);\n          break;\n        case InsertionMode.TEXT:\n          eofInText(this, token);\n          break;\n        case InsertionMode.IN_TABLE_TEXT:\n          tokenInTableText(this, token);\n          break;\n        case InsertionMode.IN_TEMPLATE:\n          eofInTemplate(this, token);\n          break;\n        case InsertionMode.AFTER_BODY:\n        case InsertionMode.IN_FRAMESET:\n        case InsertionMode.AFTER_FRAMESET:\n        case InsertionMode.AFTER_AFTER_BODY:\n        case InsertionMode.AFTER_AFTER_FRAMESET:\n          stopParsing(this, token);\n          break;\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onWhitespaceCharacter\",\n    value: function onWhitespaceCharacter(token) {\n      if (this.skipNextNewLine) {\n        this.skipNextNewLine = false;\n        if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n          if (token.chars.length === 1) {\n            return;\n          }\n          token.chars = token.chars.substr(1);\n        }\n      }\n      if (this.tokenizer.inForeignNode) {\n        this._insertCharacters(token);\n        return;\n      }\n      switch (this.insertionMode) {\n        case InsertionMode.IN_HEAD:\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n        case InsertionMode.AFTER_HEAD:\n        case InsertionMode.TEXT:\n        case InsertionMode.IN_COLUMN_GROUP:\n        case InsertionMode.IN_SELECT:\n        case InsertionMode.IN_SELECT_IN_TABLE:\n        case InsertionMode.IN_FRAMESET:\n        case InsertionMode.AFTER_FRAMESET:\n          this._insertCharacters(token);\n          break;\n        case InsertionMode.IN_BODY:\n        case InsertionMode.IN_CAPTION:\n        case InsertionMode.IN_CELL:\n        case InsertionMode.IN_TEMPLATE:\n        case InsertionMode.AFTER_BODY:\n        case InsertionMode.AFTER_AFTER_BODY:\n        case InsertionMode.AFTER_AFTER_FRAMESET:\n          whitespaceCharacterInBody(this, token);\n          break;\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n          characterInTable(this, token);\n          break;\n        case InsertionMode.IN_TABLE_TEXT:\n          whitespaceCharacterInTableText(this, token);\n          break;\n        default:\n        // Do nothing\n      }\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(html, options) {\n      var parser = new this(options);\n      parser.tokenizer.write(html, true);\n      return parser.document;\n    }\n  }, {\n    key: \"getFragmentParser\",\n    value: function getFragmentParser(fragmentContext, options) {\n      var opts = _objectSpread(_objectSpread({}, defaultParserOptions), options);\n      //NOTE: use a <template> element as the fragment context if no context element was provided,\n      //so we will parse in a \"forgiving\" manner\n      fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []);\n      //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n      //This is important for jsdom, where a new `document` cannot be created. This led to\n      //fragment parsing messing with the main `document`.\n      var documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n      var parser = new this(opts, documentMock, fragmentContext);\n      if (parser.fragmentContextID === $.TEMPLATE) {\n        parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n      }\n      parser._initTokenizerForFragmentParsing();\n      parser._insertFakeRootElement();\n      parser._resetInsertionMode();\n      parser._findFormInFragmentContext();\n      return parser;\n    }\n  }]);\n  return Parser;\n}();\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n  var formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n  if (formattingElementEntry) {\n    if (!p.openElements.contains(formattingElementEntry.element)) {\n      p.activeFormattingElements.removeEntry(formattingElementEntry);\n      formattingElementEntry = null;\n    } else if (!p.openElements.hasInScope(token.tagID)) {\n      formattingElementEntry = null;\n    }\n  } else {\n    genericEndTagInBody(p, token);\n  }\n  return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n  var furthestBlock = null;\n  var idx = p.openElements.stackTop;\n  for (; idx >= 0; idx--) {\n    var element = p.openElements.items[idx];\n    if (element === formattingElementEntry.element) {\n      break;\n    }\n    if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n      furthestBlock = element;\n    }\n  }\n  if (!furthestBlock) {\n    p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n  }\n  return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n  var lastElement = furthestBlock;\n  var nextElement = p.openElements.getCommonAncestor(furthestBlock);\n  for (var i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n    //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n    nextElement = p.openElements.getCommonAncestor(element);\n    var elementEntry = p.activeFormattingElements.getElementEntry(element);\n    var counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n    var shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n    if (shouldRemoveFromOpenElements) {\n      if (counterOverflow) {\n        p.activeFormattingElements.removeEntry(elementEntry);\n      }\n      p.openElements.remove(element);\n    } else {\n      element = aaRecreateElementFromEntry(p, elementEntry);\n      if (lastElement === furthestBlock) {\n        p.activeFormattingElements.bookmark = elementEntry;\n      }\n      p.treeAdapter.detachNode(lastElement);\n      p.treeAdapter.appendChild(element, lastElement);\n      lastElement = element;\n    }\n  }\n  return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n  var ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n  var newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n  p.openElements.replace(elementEntry.element, newElement);\n  elementEntry.element = newElement;\n  return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n  var tn = p.treeAdapter.getTagName(commonAncestor);\n  var tid = getTagID(tn);\n  if (p._isElementCausesFosterParenting(tid)) {\n    p._fosterParentElement(lastElement);\n  } else {\n    var ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n    if (tid === $.TEMPLATE && ns === NS.HTML) {\n      commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n    }\n    p.treeAdapter.appendChild(commonAncestor, lastElement);\n  }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n  var ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n  var token = formattingElementEntry.token;\n  var newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n  p._adoptNodes(furthestBlock, newElement);\n  p.treeAdapter.appendChild(furthestBlock, newElement);\n  p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n  p.activeFormattingElements.removeEntry(formattingElementEntry);\n  p.openElements.remove(formattingElementEntry.element);\n  p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n  for (var i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n    var formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n    if (!formattingElementEntry) {\n      break;\n    }\n    var furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n    if (!furthestBlock) {\n      break;\n    }\n    p.activeFormattingElements.bookmark = formattingElementEntry;\n    var lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n    var commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n    p.treeAdapter.detachNode(lastElement);\n    if (commonAncestor) aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n    aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n  }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n  p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n  p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n  p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n  p.stopped = true;\n  // NOTE: Set end locations for elements that remain on the open element stack.\n  if (token.location) {\n    // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n    // This is a problem, as we might overwrite their end position here.\n    var target = p.fragmentContext ? 0 : 2;\n    for (var i = p.openElements.stackTop; i >= target; i--) {\n      p._setEndLocation(p.openElements.items[i], token);\n    }\n    // Handle `html` and `body`\n    if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n      var htmlElement = p.openElements.items[0];\n      var htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n      if (htmlLocation && !htmlLocation.endTag) {\n        p._setEndLocation(htmlElement, token);\n        if (p.openElements.stackTop >= 1) {\n          var bodyElement = p.openElements.items[1];\n          var bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n          if (bodyLocation && !bodyLocation.endTag) {\n            p._setEndLocation(bodyElement, token);\n          }\n        }\n      }\n    }\n  }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n  p._setDocumentType(token);\n  var mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n  if (!doctype.isConforming(token)) {\n    p._err(token, ERR.nonConformingDoctype);\n  }\n  p.treeAdapter.setDocumentMode(p.document, mode);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n  p._err(token, ERR.missingDoctype, true);\n  p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n  p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n  if (token.tagID === $.HTML) {\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n  } else {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction endTagBeforeHtml(p, token) {\n  var tn = token.tagID;\n  if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction tokenBeforeHtml(p, token) {\n  p._insertFakeRootElement();\n  p.insertionMode = InsertionMode.BEFORE_HEAD;\n  p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    default:\n      {\n        tokenBeforeHead(p, token);\n      }\n  }\n}\nfunction endTagBeforeHead(p, token) {\n  var tn = token.tagID;\n  if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n    tokenBeforeHead(p, token);\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenBeforeHead(p, token) {\n  p._insertFakeElement(TN.HEAD, $.HEAD);\n  p.headElement = p.openElements.current;\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.TITLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RCDATA);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        } else {\n          p._insertElement(token, NS.HTML);\n          p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n        }\n        break;\n      }\n    case $.NOFRAMES:\n    case $.STYLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        break;\n      }\n    case $.SCRIPT:\n      {\n        p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        p._insertTemplate(token);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_TEMPLATE;\n        p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenInHead(p, token);\n      }\n  }\n}\nfunction endTagInHead(p, token) {\n  switch (token.tagID) {\n    case $.HEAD:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.AFTER_HEAD;\n        break;\n      }\n    case $.BODY:\n    case $.BR:\n    case $.HTML:\n      {\n        tokenInHead(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction templateEndTagInHead(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.generateImpliedEndTagsThoroughly();\n    if (p.openElements.currentTagId !== $.TEMPLATE) {\n      p._err(token, ERR.closingOfElementWithOpenChildElements);\n    }\n    p.openElements.popUntilTagNamePopped($.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenInHead(p, token) {\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.AFTER_HEAD;\n  p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.HEAD:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.STYLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        p._err(token, ERR.nestedNoscriptInHead);\n        break;\n      }\n    default:\n      {\n        tokenInHeadNoScript(p, token);\n      }\n  }\n}\nfunction endTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case $.NOSCRIPT:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    case $.BR:\n      {\n        tokenInHeadNoScript(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenInHeadNoScript(p, token) {\n  var errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n  p._err(token, errCode);\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BODY:\n      {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_BODY;\n        break;\n      }\n    case $.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n        break;\n      }\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.SCRIPT:\n    case $.STYLE:\n    case $.TEMPLATE:\n    case $.TITLE:\n      {\n        p._err(token, ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement, $.HEAD);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenAfterHead(p, token);\n      }\n  }\n}\nfunction endTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case $.BODY:\n    case $.HTML:\n    case $.BR:\n      {\n        tokenAfterHead(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenAfterHead(p, token) {\n  p._insertFakeElement(TN.BODY, $.BODY);\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n  switch (token.type) {\n    case TokenType.CHARACTER:\n      {\n        characterInBody(p, token);\n        break;\n      }\n    case TokenType.WHITESPACE_CHARACTER:\n      {\n        whitespaceCharacterInBody(p, token);\n        break;\n      }\n    case TokenType.COMMENT:\n      {\n        appendComment(p, token);\n        break;\n      }\n    case TokenType.START_TAG:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TokenType.END_TAG:\n      {\n        endTagInBody(p, token);\n        break;\n      }\n    case TokenType.EOF:\n      {\n        eofInBody(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction whitespaceCharacterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n  if (p.openElements.tmplCount === 0) {\n    p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n  }\n}\nfunction bodyStartTagInBody(p, token) {\n  var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (bodyElement && p.openElements.tmplCount === 0) {\n    p.framesetOk = false;\n    p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n  }\n}\nfunction framesetStartTagInBody(p, token) {\n  var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (p.framesetOk && bodyElement) {\n    p.treeAdapter.detachNode(bodyElement);\n    p.openElements.popAllUpToHtmlElement();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_FRAMESET;\n  }\n}\nfunction addressStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  if (isNumberedHeader(p.openElements.currentTagId)) {\n    p.openElements.pop();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n  var inTemplate = p.openElements.tmplCount > 0;\n  if (!p.formElement || inTemplate) {\n    if (p.openElements.hasInButtonScope($.P)) {\n      p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    if (!inTemplate) {\n      p.formElement = p.openElements.current;\n    }\n  }\n}\nfunction listItemStartTagInBody(p, token) {\n  p.framesetOk = false;\n  var tn = token.tagID;\n  for (var i = p.openElements.stackTop; i >= 0; i--) {\n    var elementId = p.openElements.tagIDs[i];\n    if (tn === $.LI && elementId === $.LI || (tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n      p.openElements.popUntilTagNamePopped(elementId);\n      break;\n    }\n    if (elementId !== $.ADDRESS && elementId !== $.DIV && elementId !== $.P && p._isSpecialElement(p.openElements.items[i], elementId)) {\n      break;\n    }\n  }\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BUTTON)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped($.BUTTON);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n  var activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n  if (activeElementEntry) {\n    callAdoptionAgency(p, token);\n    p.openElements.remove(activeElementEntry.element);\n    p.activeFormattingElements.removeEntry(activeElementEntry);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  if (p.openElements.hasInScope($.NOBR)) {\n    callAdoptionAgency(p, token);\n    p._reconstructActiveFormattingElements();\n  }\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.insertMarker();\n  p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n  if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n  var inputType = getTokenAttr(token, ATTRS.TYPE);\n  return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  if (!isHiddenInput(token)) {\n    p.framesetOk = false;\n  }\n  token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n  p._appendElement(token, NS.HTML);\n  token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n  token.tagName = TN.IMG;\n  token.tagID = $.IMG;\n  areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.tokenizer.state = TokenizerMode.RCDATA;\n  p.originalInsertionMode = p.insertionMode;\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._reconstructActiveFormattingElements();\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = p.insertionMode === InsertionMode.IN_TABLE || p.insertionMode === InsertionMode.IN_CAPTION || p.insertionMode === InsertionMode.IN_TABLE_BODY || p.insertionMode === InsertionMode.IN_ROW || p.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n  if (p.openElements.currentTagId === $.OPTION) {\n    p.openElements.pop();\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.RUBY)) {\n    p.openElements.generateImpliedEndTags();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.RUBY)) {\n    p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenMathMLAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.MATHML);\n  } else {\n    p._insertElement(token, NS.MATHML);\n  }\n  token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenSVGAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.SVG);\n  } else {\n    p._insertElement(token, NS.SVG);\n  }\n  token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n  switch (token.tagID) {\n    case $.I:\n    case $.S:\n    case $.B:\n    case $.U:\n    case $.EM:\n    case $.TT:\n    case $.BIG:\n    case $.CODE:\n    case $.FONT:\n    case $.SMALL:\n    case $.STRIKE:\n    case $.STRONG:\n      {\n        bStartTagInBody(p, token);\n        break;\n      }\n    case $.A:\n      {\n        aStartTagInBody(p, token);\n        break;\n      }\n    case $.H1:\n    case $.H2:\n    case $.H3:\n    case $.H4:\n    case $.H5:\n    case $.H6:\n      {\n        numberedHeaderStartTagInBody(p, token);\n        break;\n      }\n    case $.P:\n    case $.DL:\n    case $.OL:\n    case $.UL:\n    case $.DIV:\n    case $.DIR:\n    case $.NAV:\n    case $.MAIN:\n    case $.MENU:\n    case $.ASIDE:\n    case $.CENTER:\n    case $.FIGURE:\n    case $.FOOTER:\n    case $.HEADER:\n    case $.HGROUP:\n    case $.DIALOG:\n    case $.DETAILS:\n    case $.ADDRESS:\n    case $.ARTICLE:\n    case $.SECTION:\n    case $.SUMMARY:\n    case $.FIELDSET:\n    case $.BLOCKQUOTE:\n    case $.FIGCAPTION:\n      {\n        addressStartTagInBody(p, token);\n        break;\n      }\n    case $.LI:\n    case $.DD:\n    case $.DT:\n      {\n        listItemStartTagInBody(p, token);\n        break;\n      }\n    case $.BR:\n    case $.IMG:\n    case $.WBR:\n    case $.AREA:\n    case $.EMBED:\n    case $.KEYGEN:\n      {\n        areaStartTagInBody(p, token);\n        break;\n      }\n    case $.HR:\n      {\n        hrStartTagInBody(p, token);\n        break;\n      }\n    case $.RB:\n    case $.RTC:\n      {\n        rbStartTagInBody(p, token);\n        break;\n      }\n    case $.RT:\n    case $.RP:\n      {\n        rtStartTagInBody(p, token);\n        break;\n      }\n    case $.PRE:\n    case $.LISTING:\n      {\n        preStartTagInBody(p, token);\n        break;\n      }\n    case $.XMP:\n      {\n        xmpStartTagInBody(p, token);\n        break;\n      }\n    case $.SVG:\n      {\n        svgStartTagInBody(p, token);\n        break;\n      }\n    case $.HTML:\n      {\n        htmlStartTagInBody(p, token);\n        break;\n      }\n    case $.BASE:\n    case $.LINK:\n    case $.META:\n    case $.STYLE:\n    case $.TITLE:\n    case $.SCRIPT:\n    case $.BGSOUND:\n    case $.BASEFONT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.BODY:\n      {\n        bodyStartTagInBody(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formStartTagInBody(p, token);\n        break;\n      }\n    case $.NOBR:\n      {\n        nobrStartTagInBody(p, token);\n        break;\n      }\n    case $.MATH:\n      {\n        mathStartTagInBody(p, token);\n        break;\n      }\n    case $.TABLE:\n      {\n        tableStartTagInBody(p, token);\n        break;\n      }\n    case $.INPUT:\n      {\n        inputStartTagInBody(p, token);\n        break;\n      }\n    case $.PARAM:\n    case $.TRACK:\n    case $.SOURCE:\n      {\n        paramStartTagInBody(p, token);\n        break;\n      }\n    case $.IMAGE:\n      {\n        imageStartTagInBody(p, token);\n        break;\n      }\n    case $.BUTTON:\n      {\n        buttonStartTagInBody(p, token);\n        break;\n      }\n    case $.APPLET:\n    case $.OBJECT:\n    case $.MARQUEE:\n      {\n        appletStartTagInBody(p, token);\n        break;\n      }\n    case $.IFRAME:\n      {\n        iframeStartTagInBody(p, token);\n        break;\n      }\n    case $.SELECT:\n      {\n        selectStartTagInBody(p, token);\n        break;\n      }\n    case $.OPTION:\n    case $.OPTGROUP:\n      {\n        optgroupStartTagInBody(p, token);\n        break;\n      }\n    case $.NOEMBED:\n      {\n        noembedStartTagInBody(p, token);\n        break;\n      }\n    case $.FRAMESET:\n      {\n        framesetStartTagInBody(p, token);\n        break;\n      }\n    case $.TEXTAREA:\n      {\n        textareaStartTagInBody(p, token);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          noembedStartTagInBody(p, token);\n        } else {\n          genericStartTagInBody(p, token);\n        }\n        break;\n      }\n    case $.PLAINTEXT:\n      {\n        plaintextStartTagInBody(p, token);\n        break;\n      }\n    case $.COL:\n    case $.TH:\n    case $.TD:\n    case $.TR:\n    case $.HEAD:\n    case $.FRAME:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.CAPTION:\n    case $.COLGROUP:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        genericStartTagInBody(p, token);\n      }\n  }\n}\nfunction bodyEndTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    //NOTE: <body> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo) {\n      var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n      if (bodyElement) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  }\n}\nfunction htmlEndTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    endTagAfterBody(p, token);\n  }\n}\nfunction addressEndTagInBody(p, token) {\n  var tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction formEndTagInBody(p) {\n  var inTemplate = p.openElements.tmplCount > 0;\n  var formElement = p.formElement;\n  if (!inTemplate) {\n    p.formElement = null;\n  }\n  if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n    p.openElements.generateImpliedEndTags();\n    if (inTemplate) {\n      p.openElements.popUntilTagNamePopped($.FORM);\n    } else if (formElement) {\n      p.openElements.remove(formElement);\n    }\n  }\n}\nfunction pEndTagInBody(p) {\n  if (!p.openElements.hasInButtonScope($.P)) {\n    p._insertFakeElement(TN.P, $.P);\n  }\n  p._closePElement();\n}\nfunction liEndTagInBody(p) {\n  if (p.openElements.hasInListItemScope($.LI)) {\n    p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n    p.openElements.popUntilTagNamePopped($.LI);\n  }\n}\nfunction ddEndTagInBody(p, token) {\n  var tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(tn);\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction numberedHeaderEndTagInBody(p) {\n  if (p.openElements.hasNumberedHeaderInScope()) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilNumberedHeaderPopped();\n  }\n}\nfunction appletEndTagInBody(p, token) {\n  var tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n    p.activeFormattingElements.clearToLastMarker();\n  }\n}\nfunction brEndTagInBody(p) {\n  p._reconstructActiveFormattingElements();\n  p._insertFakeElement(TN.BR, $.BR);\n  p.openElements.pop();\n  p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n  var tn = token.tagName;\n  var tid = token.tagID;\n  for (var i = p.openElements.stackTop; i > 0; i--) {\n    var element = p.openElements.items[i];\n    var elementId = p.openElements.tagIDs[i];\n    // Compare the tag name here, as the tag might not be a known tag with an ID.\n    if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(tid);\n      if (p.openElements.stackTop >= i) p.openElements.shortenToLength(i);\n      break;\n    }\n    if (p._isSpecialElement(element, elementId)) {\n      break;\n    }\n  }\n}\nfunction endTagInBody(p, token) {\n  switch (token.tagID) {\n    case $.A:\n    case $.B:\n    case $.I:\n    case $.S:\n    case $.U:\n    case $.EM:\n    case $.TT:\n    case $.BIG:\n    case $.CODE:\n    case $.FONT:\n    case $.NOBR:\n    case $.SMALL:\n    case $.STRIKE:\n    case $.STRONG:\n      {\n        callAdoptionAgency(p, token);\n        break;\n      }\n    case $.P:\n      {\n        pEndTagInBody(p);\n        break;\n      }\n    case $.DL:\n    case $.UL:\n    case $.OL:\n    case $.DIR:\n    case $.DIV:\n    case $.NAV:\n    case $.PRE:\n    case $.MAIN:\n    case $.MENU:\n    case $.ASIDE:\n    case $.BUTTON:\n    case $.CENTER:\n    case $.FIGURE:\n    case $.FOOTER:\n    case $.HEADER:\n    case $.HGROUP:\n    case $.DIALOG:\n    case $.ADDRESS:\n    case $.ARTICLE:\n    case $.DETAILS:\n    case $.SECTION:\n    case $.SUMMARY:\n    case $.LISTING:\n    case $.FIELDSET:\n    case $.BLOCKQUOTE:\n    case $.FIGCAPTION:\n      {\n        addressEndTagInBody(p, token);\n        break;\n      }\n    case $.LI:\n      {\n        liEndTagInBody(p);\n        break;\n      }\n    case $.DD:\n    case $.DT:\n      {\n        ddEndTagInBody(p, token);\n        break;\n      }\n    case $.H1:\n    case $.H2:\n    case $.H3:\n    case $.H4:\n    case $.H5:\n    case $.H6:\n      {\n        numberedHeaderEndTagInBody(p);\n        break;\n      }\n    case $.BR:\n      {\n        brEndTagInBody(p);\n        break;\n      }\n    case $.BODY:\n      {\n        bodyEndTagInBody(p, token);\n        break;\n      }\n    case $.HTML:\n      {\n        htmlEndTagInBody(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formEndTagInBody(p);\n        break;\n      }\n    case $.APPLET:\n    case $.OBJECT:\n    case $.MARQUEE:\n      {\n        appletEndTagInBody(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        genericEndTagInBody(p, token);\n      }\n  }\n}\nfunction eofInBody(p, token) {\n  if (p.tmplInsertionModeStack.length > 0) {\n    eofInTemplate(p, token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n  var _a;\n  if (token.tagID === $.SCRIPT) {\n    (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n  }\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n  p._err(token, ERR.eofInElementThatCanContainOnlyText);\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n  p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n  if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n    p.pendingCharacterTokens.length = 0;\n    p.hasNonWhitespacePendingCharacterToken = false;\n    p.originalInsertionMode = p.insertionMode;\n    p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n    switch (token.type) {\n      case TokenType.CHARACTER:\n        {\n          characterInTableText(p, token);\n          break;\n        }\n      case TokenType.WHITESPACE_CHARACTER:\n        {\n          whitespaceCharacterInTableText(p, token);\n          break;\n        }\n      // Ignore null\n    }\n  } else {\n    tokenInTable(p, token);\n  }\n}\nfunction captionStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p.activeFormattingElements.insertMarker();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n  startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TN.TBODY, $.TBODY);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n  startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n  if (p.openElements.hasInTableScope($.TABLE)) {\n    p.openElements.popUntilTagNamePopped($.TABLE);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  }\n}\nfunction inputStartTagInTable(p, token) {\n  if (isHiddenInput(token)) {\n    p._appendElement(token, NS.HTML);\n  } else {\n    tokenInTable(p, token);\n  }\n  token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n  if (!p.formElement && p.openElements.tmplCount === 0) {\n    p._insertElement(token, NS.HTML);\n    p.formElement = p.openElements.current;\n    p.openElements.pop();\n  }\n}\nfunction startTagInTable(p, token) {\n  switch (token.tagID) {\n    case $.TD:\n    case $.TH:\n    case $.TR:\n      {\n        tdStartTagInTable(p, token);\n        break;\n      }\n    case $.STYLE:\n    case $.SCRIPT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        colStartTagInTable(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formStartTagInTable(p, token);\n        break;\n      }\n    case $.TABLE:\n      {\n        tableStartTagInTable(p, token);\n        break;\n      }\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        tbodyStartTagInTable(p, token);\n        break;\n      }\n    case $.INPUT:\n      {\n        inputStartTagInTable(p, token);\n        break;\n      }\n    case $.CAPTION:\n      {\n        captionStartTagInTable(p, token);\n        break;\n      }\n    case $.COLGROUP:\n      {\n        colgroupStartTagInTable(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction endTagInTable(p, token) {\n  switch (token.tagID) {\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n          p.openElements.popUntilTagNamePopped($.TABLE);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TBODY:\n    case $.TD:\n    case $.TFOOT:\n    case $.TH:\n    case $.THEAD:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction tokenInTable(p, token) {\n  var savedFosterParentingState = p.fosterParentingEnabled;\n  p.fosterParentingEnabled = true;\n  // Process token in `In Body` mode\n  modeInBody(p, token);\n  p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n  p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n  var i = 0;\n  if (p.hasNonWhitespacePendingCharacterToken) {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      tokenInTable(p, p.pendingCharacterTokens[i]);\n    }\n  } else {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      p._insertCharacters(p.pendingCharacterTokens[i]);\n    }\n  }\n  p.insertionMode = p.originalInsertionMode;\n  p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nvar TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n  var tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope($.CAPTION)) {\n      p.openElements.generateImpliedEndTags();\n      p.openElements.popUntilTagNamePopped($.CAPTION);\n      p.activeFormattingElements.clearToLastMarker();\n      p.insertionMode = InsertionMode.IN_TABLE;\n      startTagInTable(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCaption(p, token) {\n  var tn = token.tagID;\n  switch (tn) {\n    case $.CAPTION:\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped($.CAPTION);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          if (tn === $.TABLE) {\n            endTagInTable(p, token);\n          }\n        }\n        break;\n      }\n    case $.BODY:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TBODY:\n    case $.TD:\n    case $.TFOOT:\n    case $.TH:\n    case $.THEAD:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction endTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case $.COLGROUP:\n      {\n        if (p.openElements.currentTagId === $.COLGROUP) {\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction tokenInColumnGroup(p, token) {\n  if (p.openElements.currentTagId === $.COLGROUP) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_TABLE;\n    p._processToken(token);\n  }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n  switch (token.tagID) {\n    case $.TR:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_ROW;\n        break;\n      }\n    case $.TH:\n    case $.TD:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement(TN.TR, $.TR);\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          startTagInTable(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInTableBody(p, token) {\n  var tn = token.tagID;\n  switch (token.tagID) {\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case $.TABLE:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          endTagInTable(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TD:\n    case $.TH:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n  switch (token.tagID) {\n    case $.TH:\n    case $.TD:\n      {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_CELL;\n        p.activeFormattingElements.insertMarker();\n        break;\n      }\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          startTagInTableBody(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInRow(p, token) {\n  switch (token.tagID) {\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        }\n        break;\n      }\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TD:\n    case $.TH:\n      {\n        // Ignore end tag\n        break;\n      }\n    default:\n      endTagInTable(p, token);\n  }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n  var tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n      p._closeTableCell();\n      startTagInRow(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCell(p, token) {\n  var tn = token.tagID;\n  switch (tn) {\n    case $.TD:\n    case $.TH:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped(tn);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_ROW;\n        }\n        break;\n      }\n    case $.TABLE:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p._closeTableCell();\n          endTagInRow(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.OPTION:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.OPTGROUP:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.INPUT:\n    case $.KEYGEN:\n    case $.TEXTAREA:\n    case $.SELECT:\n      {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n          p.openElements.popUntilTagNamePopped($.SELECT);\n          p._resetInsertionMode();\n          if (token.tagID !== $.SELECT) {\n            p._processStartTag(token);\n          }\n        }\n        break;\n      }\n    case $.SCRIPT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction endTagInSelect(p, token) {\n  switch (token.tagID) {\n    case $.OPTGROUP:\n      {\n        if (p.openElements.stackTop > 0 && p.openElements.currentTagId === $.OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case $.OPTION:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case $.SELECT:\n      {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n          p.openElements.popUntilTagNamePopped($.SELECT);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n  var tn = token.tagID;\n  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n    p.openElements.popUntilTagNamePopped($.SELECT);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  } else {\n    startTagInSelect(p, token);\n  }\n}\nfunction endTagInSelectInTable(p, token) {\n  var tn = token.tagID;\n  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n    if (p.openElements.hasInTableScope(tn)) {\n      p.openElements.popUntilTagNamePopped($.SELECT);\n      p._resetInsertionMode();\n      p.onEndTag(token);\n    }\n  } else {\n    endTagInSelect(p, token);\n  }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n  switch (token.tagID) {\n    // First, handle tags that can start without a mode change\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.SCRIPT:\n    case $.STYLE:\n    case $.TEMPLATE:\n    case $.TITLE:\n      startTagInHead(p, token);\n      break;\n    // Re-process the token in the appropriate mode\n    case $.CAPTION:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n      p.insertionMode = InsertionMode.IN_TABLE;\n      startTagInTable(p, token);\n      break;\n    case $.COL:\n      p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n      p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n      startTagInColumnGroup(p, token);\n      break;\n    case $.TR:\n      p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n      p.insertionMode = InsertionMode.IN_TABLE_BODY;\n      startTagInTableBody(p, token);\n      break;\n    case $.TD:\n    case $.TH:\n      p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n      p.insertionMode = InsertionMode.IN_ROW;\n      startTagInRow(p, token);\n      break;\n    default:\n      p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n      p.insertionMode = InsertionMode.IN_BODY;\n      startTagInBody(p, token);\n  }\n}\nfunction endTagInTemplate(p, token) {\n  if (token.tagID === $.TEMPLATE) {\n    templateEndTagInHead(p, token);\n  }\n}\nfunction eofInTemplate(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.popUntilTagNamePopped($.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n    p.onEof(token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n  if (token.tagID === $.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction endTagAfterBody(p, token) {\n  var _a;\n  if (token.tagID === $.HTML) {\n    if (!p.fragmentContext) {\n      p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n    }\n    //NOTE: <html> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n      p._setEndLocation(p.openElements.items[0], token);\n      // Update the body element, if it doesn't have an end tag\n      var bodyElement = p.openElements.items[1];\n      if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction tokenAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.FRAME:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction endTagInFrameset(p, token) {\n  if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n    p.openElements.pop();\n    if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n      p.insertionMode = InsertionMode.AFTER_FRAMESET;\n    }\n  }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction endTagAfterFrameset(p, token) {\n  if (token.tagID === $.HTML) {\n    p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n  }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n  if (token.tagID === $.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterAfterBody(p, token);\n  }\n}\nfunction tokenAfterAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n  token.chars = unicode.REPLACEMENT_CHARACTER;\n  p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n  while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n    p.openElements.pop();\n  }\n}\nfunction startTagInForeignContent(p, token) {\n  if (foreignContent.causesExit(token)) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._startTagOutsideForeignContent(token);\n  } else {\n    var current = p._getAdjustedCurrentElement();\n    var currentNs = p.treeAdapter.getNamespaceURI(current);\n    if (currentNs === NS.MATHML) {\n      foreignContent.adjustTokenMathMLAttrs(token);\n    } else if (currentNs === NS.SVG) {\n      foreignContent.adjustTokenSVGTagName(token);\n      foreignContent.adjustTokenSVGAttrs(token);\n    }\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n      p._appendElement(token, currentNs);\n    } else {\n      p._insertElement(token, currentNs);\n    }\n    token.ackSelfClosing = true;\n  }\n}\nfunction endTagInForeignContent(p, token) {\n  if (token.tagID === $.P || token.tagID === $.BR) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._endTagOutsideForeignContent(token);\n    return;\n  }\n  for (var i = p.openElements.stackTop; i > 0; i--) {\n    var element = p.openElements.items[i];\n    if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n      p._endTagOutsideForeignContent(token);\n      break;\n    }\n    var tagName = p.treeAdapter.getTagName(element);\n    if (tagName.toLowerCase() === token.tagName) {\n      //NOTE: update the token tag name for `_setEndLocation`.\n      token.tagName = tagName;\n      p.openElements.shortenToLength(i);\n      break;\n    }\n  }\n}","map":{"version":3,"names":["Tokenizer","TokenizerMode","OpenElementStack","FormattingElementList","EntryType","defaultTreeAdapter","doctype","foreignContent","ERR","unicode","TAG_ID","$","TAG_NAMES","TN","NS","ATTRS","SPECIAL_ELEMENTS","DOCUMENT_MODE","isNumberedHeader","getTagID","TokenType","getTokenAttr","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","startLine","startCol","startOffset","endLine","endCol","endOffset","TABLE_STRUCTURE_TAGS","Set","TABLE","TBODY","TFOOT","THEAD","TR","defaultParserOptions","scriptingEnabled","sourceCodeLocationInfo","treeAdapter","onParseError","Parser","options","document","fragmentContext","scriptHandler","currentToken","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","skipNextNewLine","fosterParentingEnabled","createDocument","tokenizer","activeFormattingElements","fragmentContextID","getTagName","UNKNOWN","_setContextModes","openElements","rootElement","getFirstChild","fragment","createDocumentFragment","_adoptNodes","token","code","beforeToken","_a","loc","location","err","node","tid","isTop","_b","onItemPush","call","stackTop","_setEndLocation","onItemPop","current","currentTagId","isHTML","getNamespaceURI","HTML","inForeignNode","_isIntegrationPoint","nextTokenizerState","_insertElement","state","TEXT","IN_BODY","PLAINTEXT","FORM","getParentNode","TITLE","TEXTAREA","RCDATA","STYLE","XMP","IFRAME","NOEMBED","NOFRAMES","NOSCRIPT","RAWTEXT","SCRIPT","SCRIPT_DATA","name","publicId","systemId","setDocumentType","documentChildren","getChildNodes","docTypeNode","find","isDocumentTypeNode","setNodeSourceCodeLocation","element","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","parent","currentTmplContentOrNode","appendChild","namespaceURI","createElement","tagName","attrs","_attachElementToTree","push","tagID","tmpl","content","setTemplateContent","commentNode","createCommentNode","data","beforeElement","_findFosterParentingLocation","insertTextBefore","chars","insertText","siblings","textNodeIdx","lastIndexOf","length","textNode","tnLoc","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","donor","recipient","child","detachNode","closingToken","ctLoc","tn","endLoc","type","END_TAG","endTag","SVG","ANNOTATION_XML","MATHML","MGLYPH","MALIGNMARK","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","COMMENT","onComment","DOCTYPE","onDoctype","START_TAG","_processStartTag","onEndTag","EOF","onEof","WHITESPACE_CHARACTER","onWhitespaceCharacter","foreignNS","ns","getAttrList","isIntegrationPoint","listLength","entries","endIndex","findIndex","entry","Marker","contains","unopenIdx","i","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","generateImpliedEndTagsWithExclusion","P","popUntilTagNamePopped","tagIDs","IN_TABLE_BODY","CAPTION","IN_CAPTION","COLGROUP","IN_COLUMN_GROUP","IN_TABLE","BODY","FRAMESET","IN_FRAMESET","SELECT","_resetInsertionModeForSelect","TEMPLATE","AFTER_HEAD","BEFORE_HEAD","TD","TH","IN_CELL","HEAD","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","has","_isElementCausesFosterParenting","openElement","items","getTemplateContent","insertBefore","id","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","IN_TEMPLATE","characterInBody","_insertCharacters","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","doctypeInInitialMode","_err","misplacedDoctype","selfClosing","ackSelfClosing","nonVoidHtmlElementStartTagWithTrailingSolidus","shouldProcessStartTagTokenInForeignContent","startTagInForeignContent","_startTagOutsideForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","_endTagOutsideForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","charCodeAt","CODE_POINTS","LINE_FEED","substr","whitespaceCharacterInBody","whitespaceCharacterInTableText","html","parser","write","opts","documentMock","unshift","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","aaObtainFormattingElementEntry","p","formattingElementEntry","getElementEntryInScopeWithTagName","removeEntry","hasInScope","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","idx","_isSpecialElement","shortenToLength","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","shouldRemoveFromOpenElements","remove","aaRecreateElementFromEntry","bookmark","newElement","replace","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","_appendCommentNode","target","htmlElement","htmlLocation","bodyElement","bodyLocation","_setDocumentType","mode","forceQuirks","QUIRKS","getDocumentMode","isConforming","nonConformingDoctype","setDocumentMode","missingDoctype","_processToken","BR","endTagWithoutMatchingOpenElement","_insertFakeElement","BASE","BASEFONT","BGSOUND","LINK","META","_appendElement","_switchToTextParsing","_insertTemplate","insertMarker","misplacedStartTagForHeadElement","pop","templateEndTagInHead","tmplCount","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","shift","nestedNoscriptInHead","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","abandonedHeadElementChild","modeInBody","_reconstructActiveFormattingElements","htmlStartTagInBody","adoptAttributes","bodyStartTagInBody","tryPeekProperlyNestedBodyElement","framesetStartTagInBody","popAllUpToHtmlElement","addressStartTagInBody","hasInButtonScope","_closePElement","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","LI","DD","DT","ADDRESS","DIV","plaintextStartTagInBody","buttonStartTagInBody","BUTTON","aStartTagInBody","activeElementEntry","A","pushElement","bStartTagInBody","nobrStartTagInBody","NOBR","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","toLowerCase","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","IMG","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","noembedStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","OPTION","rbStartTagInBody","RUBY","rtStartTagInBody","RTC","mathStartTagInBody","adjustTokenMathMLAttrs","adjustTokenXMLAttrs","svgStartTagInBody","adjustTokenSVGAttrs","genericStartTagInBody","I","S","B","U","EM","TT","BIG","CODE","FONT","SMALL","STRIKE","STRONG","H1","H2","H3","H4","H5","H6","DL","OL","UL","DIR","NAV","MAIN","MENU","ASIDE","CENTER","FIGURE","FOOTER","HEADER","HGROUP","DIALOG","DETAILS","ARTICLE","SECTION","SUMMARY","FIELDSET","BLOCKQUOTE","FIGCAPTION","WBR","AREA","EMBED","KEYGEN","HR","RB","RT","RP","PRE","LISTING","MATH","INPUT","PARAM","TRACK","SOURCE","IMAGE","APPLET","OBJECT","MARQUEE","OPTGROUP","COL","FRAME","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","pEndTagInBody","liEndTagInBody","hasInListItemScope","ddEndTagInBody","numberedHeaderEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","appletEndTagInBody","brEndTagInBody","eofInElementThatCanContainOnlyText","tokenInTable","captionStartTagInTable","clearBackToTableContext","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","hasInTableScope","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","_closeTableCell","hasInSelectScope","isRootHtmlElementCurrent","REPLACEMENT_CHARACTER","popUntilHtmlOrIntegrationPoint","causesExit","_getAdjustedCurrentElement","currentNs","adjustTokenSVGTagName"],"sources":["C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/cheerio/node_modules/parse5/dist/parser/index.js"],"sourcesContent":["import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR:\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT:\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                case $.CAPTION:\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                case $.COLGROUP:\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                case $.TABLE:\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                case $.BODY:\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                case $.FRAMESET:\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                case $.SELECT:\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                case $.TEMPLATE:\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                case $.HTML:\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                case $.TD:\n                case $.TH:\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                case $.HEAD:\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE:\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                tokenBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                tokenBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                tokenInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                tokenInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                tokenAfterHead(this, token);\n                break;\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n                characterInBody(this, token);\n                break;\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                this._insertCharacters(token);\n                break;\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                characterInTable(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                characterInTableText(this, token);\n                break;\n            case InsertionMode.IN_COLUMN_GROUP:\n                tokenInColumnGroup(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                tokenAfterBody(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n                tokenAfterAfterBody(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                tokenBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                tokenBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                tokenInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                tokenInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                tokenAfterHead(this, token);\n                break;\n            case InsertionMode.TEXT:\n                this._insertCharacters(token);\n                break;\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                characterInTable(this, token);\n                break;\n            case InsertionMode.IN_COLUMN_GROUP:\n                tokenInColumnGroup(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                tokenAfterBody(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n                tokenAfterAfterBody(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n                appendComment(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                appendCommentToDocument(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                doctypeInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                startTagBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                startTagBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                startTagInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                startTagInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                startTagAfterHead(this, token);\n                break;\n            case InsertionMode.IN_BODY:\n                startTagInBody(this, token);\n                break;\n            case InsertionMode.IN_TABLE:\n                startTagInTable(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            case InsertionMode.IN_CAPTION:\n                startTagInCaption(this, token);\n                break;\n            case InsertionMode.IN_COLUMN_GROUP:\n                startTagInColumnGroup(this, token);\n                break;\n            case InsertionMode.IN_TABLE_BODY:\n                startTagInTableBody(this, token);\n                break;\n            case InsertionMode.IN_ROW:\n                startTagInRow(this, token);\n                break;\n            case InsertionMode.IN_CELL:\n                startTagInCell(this, token);\n                break;\n            case InsertionMode.IN_SELECT:\n                startTagInSelect(this, token);\n                break;\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                startTagInSelectInTable(this, token);\n                break;\n            case InsertionMode.IN_TEMPLATE:\n                startTagInTemplate(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                startTagAfterBody(this, token);\n                break;\n            case InsertionMode.IN_FRAMESET:\n                startTagInFrameset(this, token);\n                break;\n            case InsertionMode.AFTER_FRAMESET:\n                startTagAfterFrameset(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n                startTagAfterAfterBody(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                startTagAfterAfterFrameset(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                endTagBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                endTagBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                endTagInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                endTagInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                endTagAfterHead(this, token);\n                break;\n            case InsertionMode.IN_BODY:\n                endTagInBody(this, token);\n                break;\n            case InsertionMode.TEXT:\n                endTagInText(this, token);\n                break;\n            case InsertionMode.IN_TABLE:\n                endTagInTable(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            case InsertionMode.IN_CAPTION:\n                endTagInCaption(this, token);\n                break;\n            case InsertionMode.IN_COLUMN_GROUP:\n                endTagInColumnGroup(this, token);\n                break;\n            case InsertionMode.IN_TABLE_BODY:\n                endTagInTableBody(this, token);\n                break;\n            case InsertionMode.IN_ROW:\n                endTagInRow(this, token);\n                break;\n            case InsertionMode.IN_CELL:\n                endTagInCell(this, token);\n                break;\n            case InsertionMode.IN_SELECT:\n                endTagInSelect(this, token);\n                break;\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                endTagInSelectInTable(this, token);\n                break;\n            case InsertionMode.IN_TEMPLATE:\n                endTagInTemplate(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                endTagAfterBody(this, token);\n                break;\n            case InsertionMode.IN_FRAMESET:\n                endTagInFrameset(this, token);\n                break;\n            case InsertionMode.AFTER_FRAMESET:\n                endTagAfterFrameset(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n                tokenAfterAfterBody(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                tokenBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                tokenBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                tokenInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                tokenInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                tokenAfterHead(this, token);\n                break;\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                eofInBody(this, token);\n                break;\n            case InsertionMode.TEXT:\n                eofInText(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            case InsertionMode.IN_TEMPLATE:\n                eofInTemplate(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                stopParsing(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n                this._insertCharacters(token);\n                break;\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                whitespaceCharacterInBody(this, token);\n                break;\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                characterInTable(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                whitespaceCharacterInTableText(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default:\n            endTagInTable(p, token);\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE:\n            startTagInHead(p, token);\n            break;\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        case $.COL:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        case $.TR:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        case $.TD:\n        case $.TH:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        default:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module"}