{"ast":null,"code":"import _toConsumableArray from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/programowanko/react/schedule-formatter/schedule-formatter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { isTag, hasChildren } from \"domhandler\";\n/**\n * Search a node and its children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function filter(test, node) {\n  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;\n  if (!Array.isArray(node)) node = [node];\n  return find(test, node, recurse, limit);\n}\n/**\n * Search an array of node and its children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function find(test, nodes, recurse, limit) {\n  var result = [];\n  var _iterator = _createForOfIteratorHelper(nodes),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var elem = _step.value;\n      if (test(elem)) {\n        result.push(elem);\n        if (--limit <= 0) break;\n      }\n      if (recurse && hasChildren(elem) && elem.children.length > 0) {\n        var children = find(test, elem.children, recurse, limit);\n        result.push.apply(result, _toConsumableArray(children));\n        limit -= children.length;\n        if (limit <= 0) break;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n}\n/**\n * Finds the first element inside of an array that matches a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nexport function findOneChild(test, nodes) {\n  return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first child node that passes `test`.\n */\nexport function findOne(test, nodes) {\n  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var elem = null;\n  for (var i = 0; i < nodes.length && !elem; i++) {\n    var checked = nodes[i];\n    if (!isTag(checked)) {\n      continue;\n    } else if (test(checked)) {\n      elem = checked;\n    } else if (recurse && checked.children.length > 0) {\n      elem = findOne(test, checked.children, true);\n    }\n  }\n  return elem;\n}\n/**\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nexport function existsOne(test, nodes) {\n  return nodes.some(function (checked) {\n    return isTag(checked) && (test(checked) || checked.children.length > 0 && existsOne(test, checked.children));\n  });\n}\n/**\n * Search and array of nodes and its children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nexport function findAll(test, nodes) {\n  var _a;\n  var result = [];\n  var stack = nodes.filter(isTag);\n  var elem;\n  while (elem = stack.shift()) {\n    var children = (_a = elem.children) === null || _a === void 0 ? void 0 : _a.filter(isTag);\n    if (children && children.length > 0) {\n      stack.unshift.apply(stack, _toConsumableArray(children));\n    }\n    if (test(elem)) result.push(elem);\n  }\n  return result;\n}","map":{"version":3,"mappings":"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","names":["isTag","hasChildren","filter","test","node","recurse","limit","Infinity","Array","isArray","find","nodes","result","elem","push","children","length","findOneChild","findOne","i","checked","existsOne","some","findAll","stack","shift","unshift"],"sources":["querying.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}